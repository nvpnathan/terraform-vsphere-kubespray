{
    "version": 3,
    "terraform_version": "0.11.10",
    "serial": 9,
    "lineage": "726d82d1-c4c4-9736-a566-e54cd7f71b2f",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "data.template_file.haproxy": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "64f9862b391fd0530e2f4f8de7c221906197f177d66565831090fefe3ed95f1f",
                        "attributes": {
                            "id": "64f9862b391fd0530e2f4f8de7c221906197f177d66565831090fefe3ed95f1f",
                            "rendered": "global\n\tlog /dev/log\tlocal0\n\tlog /dev/log\tlocal1 notice\n\tchroot /var/lib/haproxy\n\tstats socket /run/haproxy/admin.sock mode 660 level admin\n\tstats timeout 30s\n\tuser haproxy\n\tgroup haproxy\n\tdaemon\n\n\t# Default SSL material locations\n\tca-base /etc/ssl/certs\n\tcrt-base /etc/ssl/private\n\n\t# Default ciphers to use on SSL-enabled listening sockets.\n\t# For more information, see ciphers(1SSL). This list is from:\n\t#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/\n\tssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS\n\tssl-default-bind-options no-sslv3\n\ndefaults\n\tlog\tglobal\n\tmode\thttp\n\toption\thttplog\n\toption\tdontlognull\n        timeout connect 5000\n        timeout client  50000\n        timeout server  50000\n\terrorfile 400 /etc/haproxy/errors/400.http\n\terrorfile 403 /etc/haproxy/errors/403.http\n\terrorfile 408 /etc/haproxy/errors/408.http\n\terrorfile 500 /etc/haproxy/errors/500.http\n\terrorfile 502 /etc/haproxy/errors/502.http\n\terrorfile 503 /etc/haproxy/errors/503.http\n\terrorfile 504 /etc/haproxy/errors/504.http\n\nfrontend kubernetes\n\tbind 192.168.69.10:6443\n\toption tcplog\n\tmode tcp\n\tdefault_backend kubernetes-master-nodes\n\nbackend kubernetes-master-nodes\n\tmode tcp\n\tbalance roundrobin\n\toption tcp-check\n\n",
                            "template": "global\n\tlog /dev/log\tlocal0\n\tlog /dev/log\tlocal1 notice\n\tchroot /var/lib/haproxy\n\tstats socket /run/haproxy/admin.sock mode 660 level admin\n\tstats timeout 30s\n\tuser haproxy\n\tgroup haproxy\n\tdaemon\n\n\t# Default SSL material locations\n\tca-base /etc/ssl/certs\n\tcrt-base /etc/ssl/private\n\n\t# Default ciphers to use on SSL-enabled listening sockets.\n\t# For more information, see ciphers(1SSL). This list is from:\n\t#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/\n\tssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS\n\tssl-default-bind-options no-sslv3\n\ndefaults\n\tlog\tglobal\n\tmode\thttp\n\toption\thttplog\n\toption\tdontlognull\n        timeout connect 5000\n        timeout client  50000\n        timeout server  50000\n\terrorfile 400 /etc/haproxy/errors/400.http\n\terrorfile 403 /etc/haproxy/errors/403.http\n\terrorfile 408 /etc/haproxy/errors/408.http\n\terrorfile 500 /etc/haproxy/errors/500.http\n\terrorfile 502 /etc/haproxy/errors/502.http\n\terrorfile 503 /etc/haproxy/errors/503.http\n\terrorfile 504 /etc/haproxy/errors/504.http\n\nfrontend kubernetes\n\tbind ${bind_ip}:6443\n\toption tcplog\n\tmode tcp\n\tdefault_backend kubernetes-master-nodes\n\nbackend kubernetes-master-nodes\n\tmode tcp\n\tbalance roundrobin\n\toption tcp-check\n\n",
                            "vars.%": "1",
                            "vars.bind_ip": "192.168.69.10"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.haproxy_backend.0": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "21f68282c4c3cbf66de293b4b6fbbe7f9c538f9d4d1e65dd83f22695f9c04899",
                        "attributes": {
                            "id": "21f68282c4c3cbf66de293b4b6fbbe7f9c538f9d4d1e65dd83f22695f9c04899",
                            "rendered": "\tserver k8s-kubespray-master-0 192.168.69.11:6443 check fall 3 rise 2\n",
                            "template": "\tserver ${prefix_server}-master-${count} ${backend_server_ip}:6443 check fall 3 rise 2\n",
                            "vars.%": "3",
                            "vars.backend_server_ip": "192.168.69.11",
                            "vars.count": "0",
                            "vars.prefix_server": "k8s-kubespray"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.haproxy_backend.1": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "c05f267b98ddcd72c1379131fcbbbc6547db9a6fcb4f41f80edf8080c7ff6d4b",
                        "attributes": {
                            "id": "c05f267b98ddcd72c1379131fcbbbc6547db9a6fcb4f41f80edf8080c7ff6d4b",
                            "rendered": "\tserver k8s-kubespray-master-1 192.168.69.12:6443 check fall 3 rise 2\n",
                            "template": "\tserver ${prefix_server}-master-${count} ${backend_server_ip}:6443 check fall 3 rise 2\n",
                            "vars.%": "3",
                            "vars.backend_server_ip": "192.168.69.12",
                            "vars.count": "1",
                            "vars.prefix_server": "k8s-kubespray"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.haproxy_backend.2": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "4455388f48b364241f848a11d9a981e9eb22909f3c25739ecb4d7f7a9efda7e2",
                        "attributes": {
                            "id": "4455388f48b364241f848a11d9a981e9eb22909f3c25739ecb4d7f7a9efda7e2",
                            "rendered": "\tserver k8s-kubespray-master-2 192.168.69.13:6443 check fall 3 rise 2\n",
                            "template": "\tserver ${prefix_server}-master-${count} ${backend_server_ip}:6443 check fall 3 rise 2\n",
                            "vars.%": "3",
                            "vars.backend_server_ip": "192.168.69.13",
                            "vars.count": "2",
                            "vars.prefix_server": "k8s-kubespray"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubespray_all": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "22bd86fe1c46924e7317520f882c1a2b39c89cf483da86e61fb52ce80e459be0",
                        "attributes": {
                            "id": "22bd86fe1c46924e7317520f882c1a2b39c89cf483da86e61fb52ce80e459be0",
                            "rendered": "# Valid bootstrap options (required): ubuntu, coreos, centos, none\nbootstrap_os: ubuntu\n\n#Directory where etcd data stored\netcd_data_dir: /var/lib/etcd\n\n# Directory where the binaries will be installed\nbin_dir: /usr/local/bin\n\n## The access_ip variable is used to define how other nodes should access\n## the node.  This is used in flannel to allow other flannel nodes to see\n## this node for example.  The access_ip is really useful AWS and Google\n## environments where the nodes are accessed remotely by the \"public\" ip,\n## but don't know about that address themselves.\n#access_ip: 1.1.1.1\n\n### LOADBALANCING AND ACCESS MODES\n## Enable multiaccess to configure etcd clients to access all of the etcd members directly\n## as the \"http://hostX:port, http://hostY:port, ...\" and ignore the proxy loadbalancers.\n## This may be the case if clients support and loadbalance multiple etcd servers natively.\netcd_multiaccess: true\n\n### ETCD: disable peer client cert authentication.\n# This affects ETCD_PEER_CLIENT_CERT_AUTH variable\n#etcd_peer_client_auth: true\n\n## External LB example config\n## apiserver_loadbalancer_domain_name: \"elb.some.domain\"\nloadbalancer_apiserver:\n  address: \"192.168.69.10\"\n  port: 6443\n\n## Internal loadbalancers for apiservers\n#loadbalancer_apiserver_localhost: true\n\n## Local loadbalancer should use this port instead, if defined.\n## Defaults to kube_apiserver_port (6443)\n#nginx_kube_apiserver_port: 8443\n\n### OTHER OPTIONAL VARIABLES\n## For some things, kubelet needs to load kernel modules.  For example, dynamic kernel services are needed\n## for mounting persistent volumes into containers.  These may not be loaded by preinstall kubernetes\n## processes.  For example, ceph and rbd backed volumes.  Set to true to allow kubelet to load kernel\n## modules.\n#kubelet_load_modules: false\n\n## Internal network total size. This is the prefix of the\n## entire network. Must be unused in your environment.\n#kube_network_prefix: 18\n\n## With calico it is possible to distributed routes with border routers of the datacenter.\n## Warning : enabling router peering will disable calico's default behavior ('node mesh').\n## The subnets of each nodes will be distributed by the datacenter router\n#peer_with_router: false\n\n## Upstream dns servers used by dnsmasq\n#upstream_dns_servers:\n#  - 8.8.8.8\n#  - 8.8.4.4\n\n## There are some changes specific to the cloud providers\n## for instance we need to encapsulate packets with some network plugins\n## If set the possible values are either 'gce', 'aws', 'azure', 'openstack', 'vsphere', or 'external'\n## When openstack is used make sure to source in the openstack credentials\n## like you would do when using nova-client before starting the playbook.\ncloud_provider: \"vsphere\"\nvsphere_vcenter_ip: \"vlab-vcsa.vballin.com\"\nvsphere_vcenter_port: 443\nvsphere_insecure: 1\nvsphere_user: \"vcp-svc@vsphere.local\"\nvsphere_password: \"VMware1!\"\nvsphere_datacenter: \"vlab-dc\"\nvsphere_datastore: \"vLab-NFS-DS-300-10\"\nvsphere_working_dir: \"k8s-hard-way\"\nvsphere_scsi_controller_type: \"pvscsi\"\nvsphere_resource_pool: \"k8s-hard-way\"\n\n## When azure is used, you need to also set the following variables.\n## see docs/azure.md for details on how to get these values\n#azure_tenant_id:\n#azure_subscription_id:\n#azure_aad_client_id:\n#azure_aad_client_secret:\n#azure_resource_group:\n#azure_location:\n#azure_subnet_name:\n#azure_security_group_name:\n#azure_vnet_name:\n#azure_vnet_resource_group:\n#azure_route_table_name:\n\n## When OpenStack is used, Cinder version can be explicitly specified if autodetection fails (Fixed in 1.9: https://github.com/kubernetes/kubernetes/issues/50461)\n#openstack_blockstorage_version: \"v1/v2/auto (default)\"\n## When OpenStack is used, if LBaaSv2 is available you can enable it with the following 2 variables.\n#openstack_lbaas_enabled: True\n#openstack_lbaas_subnet_id: \"Neutron subnet ID (not network ID) to create LBaaS VIP\"\n## To enable automatic floating ip provisioning, specify a subnet.\n#openstack_lbaas_floating_network_id: \"Neutron network ID (not subnet ID) to get floating IP from, disabled by default\"\n## Override default LBaaS behavior\n#openstack_lbaas_use_octavia: False\n#openstack_lbaas_method: \"ROUND_ROBIN\"\n#openstack_lbaas_provider: \"haproxy\"\n#openstack_lbaas_create_monitor: \"yes\"\n#openstack_lbaas_monitor_delay: \"1m\"\n#openstack_lbaas_monitor_timeout: \"30s\"\n#openstack_lbaas_monitor_max_retries: \"3\"\n\n## Uncomment to enable experimental kubeadm deployment mode\nkubeadm_enabled: false\nskip_non_kubeadm_warning: true\n## Set these proxy values in order to update package manager and docker daemon to use proxies\n#http_proxy: \"\"\n#https_proxy: \"\"\n## Refer to roles/kubespray-defaults/defaults/main.yml before modifying no_proxy\n#no_proxy: \"\"\n\n## Uncomment this if you want to force overlay/overlay2 as docker storage driver\n## Please note that overlay2 is only supported on newer kernels\n#docker_storage_options: -s overlay2\n\n# Uncomment this if you have more than 3 nameservers, then we'll only use the first 3.\n#docker_dns_servers_strict: false\n\n## Default packages to install within the cluster, f.e:\n#kpm_packages:\n# - name: kube-system/grafana\n\n## Certificate Management\n## This setting determines whether certs are generated via scripts or whether a\n## cluster of Hashicorp's Vault is started to issue certificates (using etcd\n## as a backend). Options are \"script\" or \"vault\"\n#cert_management: script\n\n# Set to true to allow pre-checks to fail and continue deployment\n#ignore_assert_errors: false\n\n## Etcd auto compaction retention for mvcc key value store in hour\n#etcd_compaction_retention: 0\n\n## Set level of detail for etcd exported metrics, specify 'extensive' to include histogram metrics.\n#etcd_metrics: basic\n\n## Etcd is restricted by default to 512M on systems under 4GB RAM, 512MB is not enough for much more than testing.\n## Set this if your etcd nodes have less than 4GB but you want more RAM for etcd. Set to 0 for unrestricted RAM.\n#etcd_memory_limit: \"512M\"\n\n# The read-only port for the Kubelet to serve on with no authentication/authorization. Uncomment to enable.\n#kube_read_only_port: 10255\n",
                            "template": "# Valid bootstrap options (required): ubuntu, coreos, centos, none\nbootstrap_os: ubuntu\n\n#Directory where etcd data stored\netcd_data_dir: /var/lib/etcd\n\n# Directory where the binaries will be installed\nbin_dir: /usr/local/bin\n\n## The access_ip variable is used to define how other nodes should access\n## the node.  This is used in flannel to allow other flannel nodes to see\n## this node for example.  The access_ip is really useful AWS and Google\n## environments where the nodes are accessed remotely by the \"public\" ip,\n## but don't know about that address themselves.\n#access_ip: 1.1.1.1\n\n### LOADBALANCING AND ACCESS MODES\n## Enable multiaccess to configure etcd clients to access all of the etcd members directly\n## as the \"http://hostX:port, http://hostY:port, ...\" and ignore the proxy loadbalancers.\n## This may be the case if clients support and loadbalance multiple etcd servers natively.\netcd_multiaccess: true\n\n### ETCD: disable peer client cert authentication.\n# This affects ETCD_PEER_CLIENT_CERT_AUTH variable\n#etcd_peer_client_auth: true\n\n## External LB example config\n## apiserver_loadbalancer_domain_name: \"elb.some.domain\"\nloadbalancer_apiserver:\n  address: \"${loadbalancer_apiserver}\"\n  port: 6443\n\n## Internal loadbalancers for apiservers\n#loadbalancer_apiserver_localhost: true\n\n## Local loadbalancer should use this port instead, if defined.\n## Defaults to kube_apiserver_port (6443)\n#nginx_kube_apiserver_port: 8443\n\n### OTHER OPTIONAL VARIABLES\n## For some things, kubelet needs to load kernel modules.  For example, dynamic kernel services are needed\n## for mounting persistent volumes into containers.  These may not be loaded by preinstall kubernetes\n## processes.  For example, ceph and rbd backed volumes.  Set to true to allow kubelet to load kernel\n## modules.\n#kubelet_load_modules: false\n\n## Internal network total size. This is the prefix of the\n## entire network. Must be unused in your environment.\n#kube_network_prefix: 18\n\n## With calico it is possible to distributed routes with border routers of the datacenter.\n## Warning : enabling router peering will disable calico's default behavior ('node mesh').\n## The subnets of each nodes will be distributed by the datacenter router\n#peer_with_router: false\n\n## Upstream dns servers used by dnsmasq\n#upstream_dns_servers:\n#  - 8.8.8.8\n#  - 8.8.4.4\n\n## There are some changes specific to the cloud providers\n## for instance we need to encapsulate packets with some network plugins\n## If set the possible values are either 'gce', 'aws', 'azure', 'openstack', 'vsphere', or 'external'\n## When openstack is used make sure to source in the openstack credentials\n## like you would do when using nova-client before starting the playbook.\ncloud_provider: \"vsphere\"\nvsphere_vcenter_ip: \"${vsphere_vcenter_ip}\"\nvsphere_vcenter_port: 443\nvsphere_insecure: 1\nvsphere_user: \"${vsphere_user}\"\nvsphere_password: \"${vsphere_password}\"\nvsphere_datacenter: \"${vsphere_datacenter}\"\nvsphere_datastore: \"${vsphere_datastore}\"\nvsphere_working_dir: \"${vsphere_working_dir}\"\nvsphere_scsi_controller_type: \"pvscsi\"\nvsphere_resource_pool: \"${vsphere_resource_pool}\"\n\n## When azure is used, you need to also set the following variables.\n## see docs/azure.md for details on how to get these values\n#azure_tenant_id:\n#azure_subscription_id:\n#azure_aad_client_id:\n#azure_aad_client_secret:\n#azure_resource_group:\n#azure_location:\n#azure_subnet_name:\n#azure_security_group_name:\n#azure_vnet_name:\n#azure_vnet_resource_group:\n#azure_route_table_name:\n\n## When OpenStack is used, Cinder version can be explicitly specified if autodetection fails (Fixed in 1.9: https://github.com/kubernetes/kubernetes/issues/50461)\n#openstack_blockstorage_version: \"v1/v2/auto (default)\"\n## When OpenStack is used, if LBaaSv2 is available you can enable it with the following 2 variables.\n#openstack_lbaas_enabled: True\n#openstack_lbaas_subnet_id: \"Neutron subnet ID (not network ID) to create LBaaS VIP\"\n## To enable automatic floating ip provisioning, specify a subnet.\n#openstack_lbaas_floating_network_id: \"Neutron network ID (not subnet ID) to get floating IP from, disabled by default\"\n## Override default LBaaS behavior\n#openstack_lbaas_use_octavia: False\n#openstack_lbaas_method: \"ROUND_ROBIN\"\n#openstack_lbaas_provider: \"haproxy\"\n#openstack_lbaas_create_monitor: \"yes\"\n#openstack_lbaas_monitor_delay: \"1m\"\n#openstack_lbaas_monitor_timeout: \"30s\"\n#openstack_lbaas_monitor_max_retries: \"3\"\n\n## Uncomment to enable experimental kubeadm deployment mode\nkubeadm_enabled: false\nskip_non_kubeadm_warning: true\n## Set these proxy values in order to update package manager and docker daemon to use proxies\n#http_proxy: \"\"\n#https_proxy: \"\"\n## Refer to roles/kubespray-defaults/defaults/main.yml before modifying no_proxy\n#no_proxy: \"\"\n\n## Uncomment this if you want to force overlay/overlay2 as docker storage driver\n## Please note that overlay2 is only supported on newer kernels\n#docker_storage_options: -s overlay2\n\n# Uncomment this if you have more than 3 nameservers, then we'll only use the first 3.\n#docker_dns_servers_strict: false\n\n## Default packages to install within the cluster, f.e:\n#kpm_packages:\n# - name: kube-system/grafana\n\n## Certificate Management\n## This setting determines whether certs are generated via scripts or whether a\n## cluster of Hashicorp's Vault is started to issue certificates (using etcd\n## as a backend). Options are \"script\" or \"vault\"\n#cert_management: script\n\n# Set to true to allow pre-checks to fail and continue deployment\n#ignore_assert_errors: false\n\n## Etcd auto compaction retention for mvcc key value store in hour\n#etcd_compaction_retention: 0\n\n## Set level of detail for etcd exported metrics, specify 'extensive' to include histogram metrics.\n#etcd_metrics: basic\n\n## Etcd is restricted by default to 512M on systems under 4GB RAM, 512MB is not enough for much more than testing.\n## Set this if your etcd nodes have less than 4GB but you want more RAM for etcd. Set to 0 for unrestricted RAM.\n#etcd_memory_limit: \"512M\"\n\n# The read-only port for the Kubelet to serve on with no authentication/authorization. Uncomment to enable.\n#kube_read_only_port: 10255\n",
                            "vars.%": "9",
                            "vars.kubeadm": "false",
                            "vars.loadbalancer_apiserver": "192.168.69.10",
                            "vars.vsphere_datacenter": "vlab-dc",
                            "vars.vsphere_datastore": "vLab-NFS-DS-300-10",
                            "vars.vsphere_password": "VMware1!",
                            "vars.vsphere_resource_pool": "k8s-hard-way",
                            "vars.vsphere_user": "vcp-svc@vsphere.local",
                            "vars.vsphere_vcenter_ip": "vlab-vcsa.vballin.com",
                            "vars.vsphere_working_dir": "k8s-hard-way"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubespray_hosts_master.0": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "047bda559b6d9586cf02785304288b51fe2b6a59031c5cdc157400bc03bf0c39",
                        "attributes": {
                            "id": "047bda559b6d9586cf02785304288b51fe2b6a59031c5cdc157400bc03bf0c39",
                            "rendered": "k8s-kubespray-master-0 ansible_host=192.168.69.11\n",
                            "template": "${hostname} ansible_host=${host_ip}\n",
                            "vars.%": "2",
                            "vars.host_ip": "192.168.69.11",
                            "vars.hostname": "k8s-kubespray-master-0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubespray_hosts_master.1": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "55e0452b1a50ee5cf9d1657460ede37c34fd07d68d6bf4a3d6684e6ad34cdd6e",
                        "attributes": {
                            "id": "55e0452b1a50ee5cf9d1657460ede37c34fd07d68d6bf4a3d6684e6ad34cdd6e",
                            "rendered": "k8s-kubespray-master-1 ansible_host=192.168.69.12\n",
                            "template": "${hostname} ansible_host=${host_ip}\n",
                            "vars.%": "2",
                            "vars.host_ip": "192.168.69.12",
                            "vars.hostname": "k8s-kubespray-master-1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubespray_hosts_master.2": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "7a604fcdc95b3700f6d58f7ec720024685456e4a6d1462f879529b1cdc7161dd",
                        "attributes": {
                            "id": "7a604fcdc95b3700f6d58f7ec720024685456e4a6d1462f879529b1cdc7161dd",
                            "rendered": "k8s-kubespray-master-2 ansible_host=192.168.69.13\n",
                            "template": "${hostname} ansible_host=${host_ip}\n",
                            "vars.%": "2",
                            "vars.host_ip": "192.168.69.13",
                            "vars.hostname": "k8s-kubespray-master-2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubespray_hosts_master_list.0": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "0fa1143fbed59b8a4ff1a800f97d34829e8b450a9bb8a0e6b9b7027270aef609",
                        "attributes": {
                            "id": "0fa1143fbed59b8a4ff1a800f97d34829e8b450a9bb8a0e6b9b7027270aef609",
                            "rendered": "k8s-kubespray-master-0\n",
                            "template": "${hostname}\n",
                            "vars.%": "1",
                            "vars.hostname": "k8s-kubespray-master-0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubespray_hosts_master_list.1": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "a5408e9ffe6bdd235ce7a962413ee2ee9c27d19b3944ee305bb123b7db828ba6",
                        "attributes": {
                            "id": "a5408e9ffe6bdd235ce7a962413ee2ee9c27d19b3944ee305bb123b7db828ba6",
                            "rendered": "k8s-kubespray-master-1\n",
                            "template": "${hostname}\n",
                            "vars.%": "1",
                            "vars.hostname": "k8s-kubespray-master-1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubespray_hosts_master_list.2": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "758380376ef0d46078f7db1680f6d8d575b4152184feaca103da773deb9b04c7",
                        "attributes": {
                            "id": "758380376ef0d46078f7db1680f6d8d575b4152184feaca103da773deb9b04c7",
                            "rendered": "k8s-kubespray-master-2\n",
                            "template": "${hostname}\n",
                            "vars.%": "1",
                            "vars.hostname": "k8s-kubespray-master-2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubespray_hosts_worker.0": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2173542472287744757f5f5aba09931e2b3cbabd7b8318c679d80b5bdbf824de",
                        "attributes": {
                            "id": "2173542472287744757f5f5aba09931e2b3cbabd7b8318c679d80b5bdbf824de",
                            "rendered": "k8s-kubespray-worker-0 ansible_host=192.168.69.21\n",
                            "template": "${hostname} ansible_host=${host_ip}\n",
                            "vars.%": "2",
                            "vars.host_ip": "192.168.69.21",
                            "vars.hostname": "k8s-kubespray-worker-0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubespray_hosts_worker.1": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "644650f99ae733e5634d630691e4bdc179e8789a26fcfa073f5f1e83b52693e4",
                        "attributes": {
                            "id": "644650f99ae733e5634d630691e4bdc179e8789a26fcfa073f5f1e83b52693e4",
                            "rendered": "k8s-kubespray-worker-1 ansible_host=192.168.69.22\n",
                            "template": "${hostname} ansible_host=${host_ip}\n",
                            "vars.%": "2",
                            "vars.host_ip": "192.168.69.22",
                            "vars.hostname": "k8s-kubespray-worker-1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubespray_hosts_worker.2": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "8bfac771b9b62a4ecd5733ce35176c5c756736c9504f7944b54a577956e4e151",
                        "attributes": {
                            "id": "8bfac771b9b62a4ecd5733ce35176c5c756736c9504f7944b54a577956e4e151",
                            "rendered": "k8s-kubespray-worker-2 ansible_host=192.168.69.23\n",
                            "template": "${hostname} ansible_host=${host_ip}\n",
                            "vars.%": "2",
                            "vars.host_ip": "192.168.69.23",
                            "vars.hostname": "k8s-kubespray-worker-2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubespray_hosts_worker_list.0": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "17113f239200f3c5c869d12caf0f4cf140f993e109252dac9f3c8f20dffeba99",
                        "attributes": {
                            "id": "17113f239200f3c5c869d12caf0f4cf140f993e109252dac9f3c8f20dffeba99",
                            "rendered": "k8s-kubespray-worker-0\n",
                            "template": "${hostname}\n",
                            "vars.%": "1",
                            "vars.hostname": "k8s-kubespray-worker-0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubespray_hosts_worker_list.1": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "aa6c8e893c60ca4d0cae0eaf57b9bffd62e180bc36beafcd97c85e735bae0a85",
                        "attributes": {
                            "id": "aa6c8e893c60ca4d0cae0eaf57b9bffd62e180bc36beafcd97c85e735bae0a85",
                            "rendered": "k8s-kubespray-worker-1\n",
                            "template": "${hostname}\n",
                            "vars.%": "1",
                            "vars.hostname": "k8s-kubespray-worker-1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubespray_hosts_worker_list.2": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "9f3c1c433a1a2923268fecab5e2cc419023ce20490dc67b3a1ca08d145ddc848",
                        "attributes": {
                            "id": "9f3c1c433a1a2923268fecab5e2cc419023ce20490dc67b3a1ca08d145ddc848",
                            "rendered": "k8s-kubespray-worker-2\n",
                            "template": "${hostname}\n",
                            "vars.%": "1",
                            "vars.hostname": "k8s-kubespray-worker-2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubespray_k8s_cluster": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "dcb3dc6bc75a70d9f430816905da4a77d75fa3e448990b0eb05fb9866e88ada8",
                        "attributes": {
                            "id": "dcb3dc6bc75a70d9f430816905da4a77d75fa3e448990b0eb05fb9866e88ada8",
                            "rendered": "# Kubernetes configuration dirs and system namespace.\n# Those are where all the additional config stuff goes\n# the kubernetes normally puts in /srv/kubernetes.\n# This puts them in a sane location and namespace.\n# Editing those values will almost surely break something.\nkube_config_dir: /etc/kubernetes\nkube_script_dir: \"{{ bin_dir }}/kubernetes-scripts\"\nkube_manifest_dir: \"{{ kube_config_dir }}/manifests\"\n\n# This is where all the cert scripts and certs will be located\nkube_cert_dir: \"{{ kube_config_dir }}/ssl\"\n\n# This is where all of the bearer tokens will be stored\nkube_token_dir: \"{{ kube_config_dir }}/tokens\"\n\n# This is where to save basic auth file\nkube_users_dir: \"{{ kube_config_dir }}/users\"\n\nkube_api_anonymous_auth: true\n\n## Change this to use another Kubernetes version, e.g. a current beta release\nkube_version: v1.12.5\n\n# Where the binaries will be downloaded.\n# Note: ensure that you've enough disk space (about 1G)\nlocal_release_dir: \"/tmp/releases\"\n# Random shifts for retrying failed ops like pushing/downloading\nretry_stagger: 5\n\n# This is the group that the cert creation scripts chgrp the\n# cert files to. Not really changeable...\nkube_cert_group: kube-cert\n\n# Cluster Loglevel configuration\nkube_log_level: 2\n\n# Users to create for basic auth in Kubernetes API via HTTP\n# Optionally add groups for user\nkube_api_pwd: \"{{ lookup('password', inventory_dir + '/credentials/kube_user.creds length=15 chars=ascii_letters,digits') }}\"\nkube_users:\n  kube:\n    pass: \"{{kube_api_pwd}}\"\n    role: admin\n    groups:\n      - system:masters\n\n## It is possible to activate / deactivate selected authentication methods (basic auth, static token auth)\nkube_oidc_auth: true\n#kube_basic_auth: false\n#kube_token_auth: false\n\n\n## Variables for OpenID Connect Configuration https://kubernetes.io/docs/admin/authentication/\n## To use OpenID you have to deploy additional an OpenID Provider (e.g Dex, Keycloak, ...)\n\n#kube_oidc_url: \"https://k8s-kubespray-dex.inkubate.io:32000\"\n#kube_oidc_client_id: \"example-app\"\n## Optional settings for OIDC\n#kube_oidc_ca_file: \"{{ kube_cert_dir }}/ca.pem\"\n#kube_oidc_username_claim: \"email\"\n#kube_oidc_groups_claim: \"groups\"\n\n\n# Choose network plugin (cilium, calico, contiv, weave or flannel)\n# Can also be set to 'cloud', which lets the cloud provider setup appropriate routing\nkube_network_plugin: weave\n\n# weave's network password for encryption\n# if null then no network encryption\n# you can use --extra-vars to pass the password in command line\nweave_password: VMware1!\n\n# Weave uses consensus mode by default\n# Enabling seed mode allow to dynamically add or remove hosts\n# https://www.weave.works/docs/net/latest/ipam/\nweave_mode_seed: false\n\n# This two variable are automatically changed by the weave's role, do not manually change these values\n# To reset values :\n# weave_seed: uninitialized\n# weave_peers: uninitialized\nweave_seed: uninitialized\nweave_peers: uninitialized\n\n# Set the MTU of Weave (default 1376, Jumbo Frames: 8916)\nweave_mtu: 1376\n\n# Enable kubernetes network policies\nenable_network_policy: false\n\n# Kubernetes internal network for services, unused block of space.\nkube_service_addresses: 10.233.0.0/18\n\n# internal network. When used, it will assign IP\n# addresses from this range to individual pods.\n# This network must be unused in your network infrastructure!\nkube_pods_subnet: 10.233.64.0/18\n\n# internal network node size allocation (optional). This is the size allocated\n# to each node on your network.  With these defaults you should have\n# room for 4096 nodes with 254 pods per node.\nkube_network_node_prefix: 24\n\n# The port the API Server will be listening on.\nkube_apiserver_ip: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(1)|ipaddr('address') }}\"\nkube_apiserver_port: 6443 # (https)\nkube_apiserver_insecure_port: 8080 # (http)\n# Set to 0 to disable insecure port - Requires RBAC in authorization_modes and kube_api_anonymous_auth: true\n#kube_apiserver_insecure_port: 0 # (disabled)\n\n# Kube-proxy proxyMode configuration.\n# Can be ipvs, iptables\nkube_proxy_mode: iptables\n\n## Encrypting Secret Data at Rest (experimental)\nkube_encrypt_secret_data: false\n\n# DNS configuration.\n# Kubernetes cluster name, also will be used as DNS domain\ncluster_name: cluster.local\n# Subdomains of DNS domain to be resolved via /etc/resolv.conf for hostnet pods\nndots: 2\n# Can be dnsmasq_kubedns, kubedns, coredns, coredns_dual, manual or none\ndns_mode: kubedns\n# Set manual server if using a custom cluster DNS server\n#manual_dns_server: 10.x.x.x\n\n# Can be docker_dns, host_resolvconf or none\nresolvconf_mode: docker_dns\n# Deploy netchecker app to verify DNS resolve as an HTTP service\ndeploy_netchecker: false\n# Ip address of the kubernetes skydns service\nskydns_server: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(3)|ipaddr('address') }}\"\nskydns_server_secondary: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(4)|ipaddr('address') }}\"\ndnsmasq_dns_server: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(2)|ipaddr('address') }}\"\ndns_domain: \"{{ cluster_name }}\"\n\n# Path used to store Docker data\ndocker_daemon_graph: \"/var/lib/docker\"\n\n## A string of extra options to pass to the docker daemon.\n## This string should be exactly as you wish it to appear.\n## An obvious use case is allowing insecure-registry access\n## to self hosted registries like so:\n\ndocker_options: \"--insecure-registry={{ kube_service_addresses }} --graph={{ docker_daemon_graph }}  {{ docker_log_opts }}\"\ndocker_bin_dir: \"/usr/bin\"\n\n# Settings for containerized control plane (etcd/kubelet/secrets)\netcd_deployment_type: docker\nkubelet_deployment_type: host\nvault_deployment_type: docker\nhelm_deployment_type: host\n\n# K8s image pull policy (imagePullPolicy)\nk8s_image_pull_policy: IfNotPresent\n\n# Kubernetes dashboard\n# RBAC required. see docs/getting-started.md for access details.\ndashboard_enabled: true\n\n# Monitoring apps for k8s\nefk_enabled: false\n\n# Helm deployment\nhelm_enabled: true\n\n# Istio deployment\nistio_enabled: false\n\n# Registry deployment\nregistry_enabled: false\n# registry_namespace: \"{{ system_namespace }}\"\n# registry_storage_class: \"\"\n# registry_disk_size: \"10Gi\"\n\n# Local volume provisioner deployment\nlocal_volume_provisioner_enabled: false\n# local_volume_provisioner_namespace: \"{{ system_namespace }}\"\n# local_volume_provisioner_base_dir: /mnt/disks\n# local_volume_provisioner_mount_dir: /mnt/disks\n# local_volume_provisioner_storage_class: local-storage\n\n# CephFS provisioner deployment\ncephfs_provisioner_enabled: false\n# cephfs_provisioner_namespace: \"{{ system_namespace }}\"\n# cephfs_provisioner_cluster: ceph\n# cephfs_provisioner_monitors:\n#   - 172.24.0.1:6789\n#   - 172.24.0.2:6789\n#   - 172.24.0.3:6789\n# cephfs_provisioner_admin_id: admin\n# cephfs_provisioner_secret: secret\n# cephfs_provisioner_storage_class: cephfs\n\n# Nginx ingress controller deployment\ningress_nginx_enabled: false\n# ingress_nginx_host_network: false\n# ingress_nginx_namespace: \"ingress-nginx\"\n# ingress_nginx_insecure_port: 80\n# ingress_nginx_secure_port: 443\n# ingress_nginx_configmap:\n#   map-hash-bucket-size: \"128\"\n#   ssl-protocols: \"SSLv2\"\n# ingress_nginx_configmap_tcp_services:\n#   9000: \"default/example-go:8080\"\n# ingress_nginx_configmap_udp_services:\n#   53: \"kube-system/kube-dns:53\"\n\n# Cert manager deployment\ncert_manager_enabled: false\n# cert_manager_namespace: \"cert-manager\"\n\n# Add Persistent Volumes Storage Class for corresponding cloud provider ( OpenStack is only supported now )\npersistent_volumes_enabled: false\n\n# Make a copy of kubeconfig on the host that runs Ansible in {{ inventory_dir }}/artifacts\n# kubeconfig_localhost: false\n# Download kubectl onto the host that runs Ansible in {{ bin_dir }}\n# kubectl_localhost: false\n\n# dnsmasq\n# dnsmasq_upstream_dns_servers:\n#  - /resolvethiszone.with/10.0.4.250\n#  - 8.8.8.8\n\n#  Enable creation of QoS cgroup hierarchy, if true top level QoS and pod cgroups are created. (default true)\n# kubelet_cgroups_per_qos: true\n\n# A comma separated list of levels of node allocatable enforcement to be enforced by kubelet.\n# Acceptable options are 'pods', 'system-reserved', 'kube-reserved' and ''. Default is \"\".\n# kubelet_enforce_node_allocatable: pods\n\n# kubelet authentication token webhook (default false)\nkubelet_authentication_token_webhook: true\n\n## Supplementary addresses that can be added in kubernetes ssl keys.\n## That can be useful for example to setup a keepalived virtual IP\n# supplementary_addresses_in_ssl_keys: [10.0.0.1, 10.0.0.2, 10.0.0.3]\n\n## Running on top of openstack vms with cinder enabled may lead to unschedulable pods due to NoVolumeZoneConflict restriction in kube-scheduler.\n## See https://github.com/kubernetes-incubator/kubespray/issues/2141\n## Set this variable to true to get rid of this issue\nvolume_cross_zone_attachment: false\n",
                            "template": "# Kubernetes configuration dirs and system namespace.\n# Those are where all the additional config stuff goes\n# the kubernetes normally puts in /srv/kubernetes.\n# This puts them in a sane location and namespace.\n# Editing those values will almost surely break something.\nkube_config_dir: /etc/kubernetes\nkube_script_dir: \"{{ bin_dir }}/kubernetes-scripts\"\nkube_manifest_dir: \"{{ kube_config_dir }}/manifests\"\n\n# This is where all the cert scripts and certs will be located\nkube_cert_dir: \"{{ kube_config_dir }}/ssl\"\n\n# This is where all of the bearer tokens will be stored\nkube_token_dir: \"{{ kube_config_dir }}/tokens\"\n\n# This is where to save basic auth file\nkube_users_dir: \"{{ kube_config_dir }}/users\"\n\nkube_api_anonymous_auth: true\n\n## Change this to use another Kubernetes version, e.g. a current beta release\nkube_version: ${kube_version}\n\n# Where the binaries will be downloaded.\n# Note: ensure that you've enough disk space (about 1G)\nlocal_release_dir: \"/tmp/releases\"\n# Random shifts for retrying failed ops like pushing/downloading\nretry_stagger: 5\n\n# This is the group that the cert creation scripts chgrp the\n# cert files to. Not really changeable...\nkube_cert_group: kube-cert\n\n# Cluster Loglevel configuration\nkube_log_level: 2\n\n# Users to create for basic auth in Kubernetes API via HTTP\n# Optionally add groups for user\nkube_api_pwd: \"{{ lookup('password', inventory_dir + '/credentials/kube_user.creds length=15 chars=ascii_letters,digits') }}\"\nkube_users:\n  kube:\n    pass: \"{{kube_api_pwd}}\"\n    role: admin\n    groups:\n      - system:masters\n\n## It is possible to activate / deactivate selected authentication methods (basic auth, static token auth)\nkube_oidc_auth: true\n#kube_basic_auth: false\n#kube_token_auth: false\n\n\n## Variables for OpenID Connect Configuration https://kubernetes.io/docs/admin/authentication/\n## To use OpenID you have to deploy additional an OpenID Provider (e.g Dex, Keycloak, ...)\n\n#kube_oidc_url: \"https://k8s-kubespray-dex.inkubate.io:32000\"\n#kube_oidc_client_id: \"example-app\"\n## Optional settings for OIDC\n#kube_oidc_ca_file: \"{{ kube_cert_dir }}/ca.pem\"\n#kube_oidc_username_claim: \"email\"\n#kube_oidc_groups_claim: \"groups\"\n\n\n# Choose network plugin (cilium, calico, contiv, weave or flannel)\n# Can also be set to 'cloud', which lets the cloud provider setup appropriate routing\nkube_network_plugin: ${kube_network_plugin}\n\n# weave's network password for encryption\n# if null then no network encryption\n# you can use --extra-vars to pass the password in command line\nweave_password: ${weave_password}\n\n# Weave uses consensus mode by default\n# Enabling seed mode allow to dynamically add or remove hosts\n# https://www.weave.works/docs/net/latest/ipam/\nweave_mode_seed: false\n\n# This two variable are automatically changed by the weave's role, do not manually change these values\n# To reset values :\n# weave_seed: uninitialized\n# weave_peers: uninitialized\nweave_seed: uninitialized\nweave_peers: uninitialized\n\n# Set the MTU of Weave (default 1376, Jumbo Frames: 8916)\nweave_mtu: 1376\n\n# Enable kubernetes network policies\nenable_network_policy: false\n\n# Kubernetes internal network for services, unused block of space.\nkube_service_addresses: 10.233.0.0/18\n\n# internal network. When used, it will assign IP\n# addresses from this range to individual pods.\n# This network must be unused in your network infrastructure!\nkube_pods_subnet: 10.233.64.0/18\n\n# internal network node size allocation (optional). This is the size allocated\n# to each node on your network.  With these defaults you should have\n# room for 4096 nodes with 254 pods per node.\nkube_network_node_prefix: 24\n\n# The port the API Server will be listening on.\nkube_apiserver_ip: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(1)|ipaddr('address') }}\"\nkube_apiserver_port: 6443 # (https)\nkube_apiserver_insecure_port: 8080 # (http)\n# Set to 0 to disable insecure port - Requires RBAC in authorization_modes and kube_api_anonymous_auth: true\n#kube_apiserver_insecure_port: 0 # (disabled)\n\n# Kube-proxy proxyMode configuration.\n# Can be ipvs, iptables\nkube_proxy_mode: iptables\n\n## Encrypting Secret Data at Rest (experimental)\nkube_encrypt_secret_data: false\n\n# DNS configuration.\n# Kubernetes cluster name, also will be used as DNS domain\ncluster_name: cluster.local\n# Subdomains of DNS domain to be resolved via /etc/resolv.conf for hostnet pods\nndots: 2\n# Can be dnsmasq_kubedns, kubedns, coredns, coredns_dual, manual or none\ndns_mode: ${k8s_dns_mode}\n# Set manual server if using a custom cluster DNS server\n#manual_dns_server: 10.x.x.x\n\n# Can be docker_dns, host_resolvconf or none\nresolvconf_mode: docker_dns\n# Deploy netchecker app to verify DNS resolve as an HTTP service\ndeploy_netchecker: false\n# Ip address of the kubernetes skydns service\nskydns_server: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(3)|ipaddr('address') }}\"\nskydns_server_secondary: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(4)|ipaddr('address') }}\"\ndnsmasq_dns_server: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(2)|ipaddr('address') }}\"\ndns_domain: \"{{ cluster_name }}\"\n\n# Path used to store Docker data\ndocker_daemon_graph: \"/var/lib/docker\"\n\n## A string of extra options to pass to the docker daemon.\n## This string should be exactly as you wish it to appear.\n## An obvious use case is allowing insecure-registry access\n## to self hosted registries like so:\n\ndocker_options: \"--insecure-registry={{ kube_service_addresses }} --graph={{ docker_daemon_graph }}  {{ docker_log_opts }}\"\ndocker_bin_dir: \"/usr/bin\"\n\n# Settings for containerized control plane (etcd/kubelet/secrets)\netcd_deployment_type: docker\nkubelet_deployment_type: host\nvault_deployment_type: docker\nhelm_deployment_type: host\n\n# K8s image pull policy (imagePullPolicy)\nk8s_image_pull_policy: IfNotPresent\n\n# Kubernetes dashboard\n# RBAC required. see docs/getting-started.md for access details.\ndashboard_enabled: true\n\n# Monitoring apps for k8s\nefk_enabled: false\n\n# Helm deployment\nhelm_enabled: true\n\n# Istio deployment\nistio_enabled: false\n\n# Registry deployment\nregistry_enabled: false\n# registry_namespace: \"{{ system_namespace }}\"\n# registry_storage_class: \"\"\n# registry_disk_size: \"10Gi\"\n\n# Local volume provisioner deployment\nlocal_volume_provisioner_enabled: false\n# local_volume_provisioner_namespace: \"{{ system_namespace }}\"\n# local_volume_provisioner_base_dir: /mnt/disks\n# local_volume_provisioner_mount_dir: /mnt/disks\n# local_volume_provisioner_storage_class: local-storage\n\n# CephFS provisioner deployment\ncephfs_provisioner_enabled: false\n# cephfs_provisioner_namespace: \"{{ system_namespace }}\"\n# cephfs_provisioner_cluster: ceph\n# cephfs_provisioner_monitors:\n#   - 172.24.0.1:6789\n#   - 172.24.0.2:6789\n#   - 172.24.0.3:6789\n# cephfs_provisioner_admin_id: admin\n# cephfs_provisioner_secret: secret\n# cephfs_provisioner_storage_class: cephfs\n\n# Nginx ingress controller deployment\ningress_nginx_enabled: false\n# ingress_nginx_host_network: false\n# ingress_nginx_namespace: \"ingress-nginx\"\n# ingress_nginx_insecure_port: 80\n# ingress_nginx_secure_port: 443\n# ingress_nginx_configmap:\n#   map-hash-bucket-size: \"128\"\n#   ssl-protocols: \"SSLv2\"\n# ingress_nginx_configmap_tcp_services:\n#   9000: \"default/example-go:8080\"\n# ingress_nginx_configmap_udp_services:\n#   53: \"kube-system/kube-dns:53\"\n\n# Cert manager deployment\ncert_manager_enabled: false\n# cert_manager_namespace: \"cert-manager\"\n\n# Add Persistent Volumes Storage Class for corresponding cloud provider ( OpenStack is only supported now )\npersistent_volumes_enabled: false\n\n# Make a copy of kubeconfig on the host that runs Ansible in {{ inventory_dir }}/artifacts\n# kubeconfig_localhost: false\n# Download kubectl onto the host that runs Ansible in {{ bin_dir }}\n# kubectl_localhost: false\n\n# dnsmasq\n# dnsmasq_upstream_dns_servers:\n#  - /resolvethiszone.with/10.0.4.250\n#  - 8.8.8.8\n\n#  Enable creation of QoS cgroup hierarchy, if true top level QoS and pod cgroups are created. (default true)\n# kubelet_cgroups_per_qos: true\n\n# A comma separated list of levels of node allocatable enforcement to be enforced by kubelet.\n# Acceptable options are 'pods', 'system-reserved', 'kube-reserved' and ''. Default is \"\".\n# kubelet_enforce_node_allocatable: pods\n\n# kubelet authentication token webhook (default false)\nkubelet_authentication_token_webhook: true\n\n## Supplementary addresses that can be added in kubernetes ssl keys.\n## That can be useful for example to setup a keepalived virtual IP\n# supplementary_addresses_in_ssl_keys: [10.0.0.1, 10.0.0.2, 10.0.0.3]\n\n## Running on top of openstack vms with cinder enabled may lead to unschedulable pods due to NoVolumeZoneConflict restriction in kube-scheduler.\n## See https://github.com/kubernetes-incubator/kubespray/issues/2141\n## Set this variable to true to get rid of this issue\nvolume_cross_zone_attachment: false\n",
                            "vars.%": "4",
                            "vars.k8s_dns_mode": "kubedns",
                            "vars.kube_network_plugin": "weave",
                            "vars.kube_version": "v1.12.5",
                            "vars.weave_password": "VMware1!"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.vsphere_compute_cluster.cluster": {
                    "type": "vsphere_compute_cluster",
                    "depends_on": [
                        "data.vsphere_datacenter.dc"
                    ],
                    "primary": {
                        "id": "domain-c3674",
                        "attributes": {
                            "datacenter_id": "datacenter-2",
                            "id": "domain-c3674",
                            "name": "vlab-mgmt-edge",
                            "resource_pool_id": "resgroup-3675"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "data.vsphere_datacenter.dc": {
                    "type": "vsphere_datacenter",
                    "depends_on": [],
                    "primary": {
                        "id": "datacenter-2",
                        "attributes": {
                            "id": "datacenter-2",
                            "name": "vlab-dc"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "data.vsphere_datastore.datastore": {
                    "type": "vsphere_datastore",
                    "depends_on": [
                        "data.vsphere_datacenter.dc"
                    ],
                    "primary": {
                        "id": "datastore-484",
                        "attributes": {
                            "datacenter_id": "datacenter-2",
                            "id": "datastore-484",
                            "name": "vLab-NFS-DS-300-10"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "data.vsphere_network.network": {
                    "type": "vsphere_network",
                    "depends_on": [
                        "data.vsphere_datacenter.dc"
                    ],
                    "primary": {
                        "id": "dvportgroup-604",
                        "attributes": {
                            "datacenter_id": "datacenter-2",
                            "id": "dvportgroup-604",
                            "name": "vlab-dmz",
                            "type": "DistributedVirtualPortgroup"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "data.vsphere_resource_pool.pool": {
                    "type": "vsphere_resource_pool",
                    "depends_on": [
                        "data.vsphere_datacenter.dc"
                    ],
                    "primary": {
                        "id": "resgroup-4138",
                        "attributes": {
                            "datacenter_id": "datacenter-2",
                            "id": "resgroup-4138",
                            "name": "k8s-hard-way"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "data.vsphere_virtual_machine.template": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.vsphere_datacenter.dc"
                    ],
                    "primary": {
                        "id": "42205dac-0aaa-3901-19f5-20358a09b442",
                        "attributes": {
                            "alternate_guest_name": "",
                            "datacenter_id": "datacenter-2",
                            "disks.#": "1",
                            "disks.0.eagerly_scrub": "false",
                            "disks.0.size": "40",
                            "disks.0.thin_provisioned": "true",
                            "firmware": "bios",
                            "guest_id": "ubuntu64Guest",
                            "id": "42205dac-0aaa-3901-19f5-20358a09b442",
                            "name": "linux-templates/ubuntu-16.04-terraform-template",
                            "network_interface_types.#": "1",
                            "network_interface_types.0": "vmxnet3",
                            "scsi_controller_scan_count": "1",
                            "scsi_type": "lsilogic"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "local_file.haproxy": {
                    "type": "local_file",
                    "depends_on": [
                        "data.template_file.haproxy",
                        "data.template_file.haproxy_backend.*"
                    ],
                    "primary": {
                        "id": "bf0f04848e312d177aa785c168a35a956cb068f3",
                        "attributes": {
                            "content": "global\n\tlog /dev/log\tlocal0\n\tlog /dev/log\tlocal1 notice\n\tchroot /var/lib/haproxy\n\tstats socket /run/haproxy/admin.sock mode 660 level admin\n\tstats timeout 30s\n\tuser haproxy\n\tgroup haproxy\n\tdaemon\n\n\t# Default SSL material locations\n\tca-base /etc/ssl/certs\n\tcrt-base /etc/ssl/private\n\n\t# Default ciphers to use on SSL-enabled listening sockets.\n\t# For more information, see ciphers(1SSL). This list is from:\n\t#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/\n\tssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS\n\tssl-default-bind-options no-sslv3\n\ndefaults\n\tlog\tglobal\n\tmode\thttp\n\toption\thttplog\n\toption\tdontlognull\n        timeout connect 5000\n        timeout client  50000\n        timeout server  50000\n\terrorfile 400 /etc/haproxy/errors/400.http\n\terrorfile 403 /etc/haproxy/errors/403.http\n\terrorfile 408 /etc/haproxy/errors/408.http\n\terrorfile 500 /etc/haproxy/errors/500.http\n\terrorfile 502 /etc/haproxy/errors/502.http\n\terrorfile 503 /etc/haproxy/errors/503.http\n\terrorfile 504 /etc/haproxy/errors/504.http\n\nfrontend kubernetes\n\tbind 192.168.69.10:6443\n\toption tcplog\n\tmode tcp\n\tdefault_backend kubernetes-master-nodes\n\nbackend kubernetes-master-nodes\n\tmode tcp\n\tbalance roundrobin\n\toption tcp-check\n\n\tserver k8s-kubespray-master-0 192.168.69.11:6443 check fall 3 rise 2\n\tserver k8s-kubespray-master-1 192.168.69.12:6443 check fall 3 rise 2\n\tserver k8s-kubespray-master-2 192.168.69.13:6443 check fall 3 rise 2\n",
                            "filename": "config/haproxy.cfg",
                            "id": "bf0f04848e312d177aa785c168a35a956cb068f3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local"
                },
                "local_file.kubespray_all": {
                    "type": "local_file",
                    "depends_on": [
                        "data.template_file.kubespray_all"
                    ],
                    "primary": {
                        "id": "2b383f3d2f4391b772806219a9264c3b85fdfa1b",
                        "attributes": {
                            "content": "# Valid bootstrap options (required): ubuntu, coreos, centos, none\nbootstrap_os: ubuntu\n\n#Directory where etcd data stored\netcd_data_dir: /var/lib/etcd\n\n# Directory where the binaries will be installed\nbin_dir: /usr/local/bin\n\n## The access_ip variable is used to define how other nodes should access\n## the node.  This is used in flannel to allow other flannel nodes to see\n## this node for example.  The access_ip is really useful AWS and Google\n## environments where the nodes are accessed remotely by the \"public\" ip,\n## but don't know about that address themselves.\n#access_ip: 1.1.1.1\n\n### LOADBALANCING AND ACCESS MODES\n## Enable multiaccess to configure etcd clients to access all of the etcd members directly\n## as the \"http://hostX:port, http://hostY:port, ...\" and ignore the proxy loadbalancers.\n## This may be the case if clients support and loadbalance multiple etcd servers natively.\netcd_multiaccess: true\n\n### ETCD: disable peer client cert authentication.\n# This affects ETCD_PEER_CLIENT_CERT_AUTH variable\n#etcd_peer_client_auth: true\n\n## External LB example config\n## apiserver_loadbalancer_domain_name: \"elb.some.domain\"\nloadbalancer_apiserver:\n  address: \"192.168.69.10\"\n  port: 6443\n\n## Internal loadbalancers for apiservers\n#loadbalancer_apiserver_localhost: true\n\n## Local loadbalancer should use this port instead, if defined.\n## Defaults to kube_apiserver_port (6443)\n#nginx_kube_apiserver_port: 8443\n\n### OTHER OPTIONAL VARIABLES\n## For some things, kubelet needs to load kernel modules.  For example, dynamic kernel services are needed\n## for mounting persistent volumes into containers.  These may not be loaded by preinstall kubernetes\n## processes.  For example, ceph and rbd backed volumes.  Set to true to allow kubelet to load kernel\n## modules.\n#kubelet_load_modules: false\n\n## Internal network total size. This is the prefix of the\n## entire network. Must be unused in your environment.\n#kube_network_prefix: 18\n\n## With calico it is possible to distributed routes with border routers of the datacenter.\n## Warning : enabling router peering will disable calico's default behavior ('node mesh').\n## The subnets of each nodes will be distributed by the datacenter router\n#peer_with_router: false\n\n## Upstream dns servers used by dnsmasq\n#upstream_dns_servers:\n#  - 8.8.8.8\n#  - 8.8.4.4\n\n## There are some changes specific to the cloud providers\n## for instance we need to encapsulate packets with some network plugins\n## If set the possible values are either 'gce', 'aws', 'azure', 'openstack', 'vsphere', or 'external'\n## When openstack is used make sure to source in the openstack credentials\n## like you would do when using nova-client before starting the playbook.\ncloud_provider: \"vsphere\"\nvsphere_vcenter_ip: \"vlab-vcsa.vballin.com\"\nvsphere_vcenter_port: 443\nvsphere_insecure: 1\nvsphere_user: \"vcp-svc@vsphere.local\"\nvsphere_password: \"VMware1!\"\nvsphere_datacenter: \"vlab-dc\"\nvsphere_datastore: \"vLab-NFS-DS-300-10\"\nvsphere_working_dir: \"k8s-hard-way\"\nvsphere_scsi_controller_type: \"pvscsi\"\nvsphere_resource_pool: \"k8s-hard-way\"\n\n## When azure is used, you need to also set the following variables.\n## see docs/azure.md for details on how to get these values\n#azure_tenant_id:\n#azure_subscription_id:\n#azure_aad_client_id:\n#azure_aad_client_secret:\n#azure_resource_group:\n#azure_location:\n#azure_subnet_name:\n#azure_security_group_name:\n#azure_vnet_name:\n#azure_vnet_resource_group:\n#azure_route_table_name:\n\n## When OpenStack is used, Cinder version can be explicitly specified if autodetection fails (Fixed in 1.9: https://github.com/kubernetes/kubernetes/issues/50461)\n#openstack_blockstorage_version: \"v1/v2/auto (default)\"\n## When OpenStack is used, if LBaaSv2 is available you can enable it with the following 2 variables.\n#openstack_lbaas_enabled: True\n#openstack_lbaas_subnet_id: \"Neutron subnet ID (not network ID) to create LBaaS VIP\"\n## To enable automatic floating ip provisioning, specify a subnet.\n#openstack_lbaas_floating_network_id: \"Neutron network ID (not subnet ID) to get floating IP from, disabled by default\"\n## Override default LBaaS behavior\n#openstack_lbaas_use_octavia: False\n#openstack_lbaas_method: \"ROUND_ROBIN\"\n#openstack_lbaas_provider: \"haproxy\"\n#openstack_lbaas_create_monitor: \"yes\"\n#openstack_lbaas_monitor_delay: \"1m\"\n#openstack_lbaas_monitor_timeout: \"30s\"\n#openstack_lbaas_monitor_max_retries: \"3\"\n\n## Uncomment to enable experimental kubeadm deployment mode\nkubeadm_enabled: false\nskip_non_kubeadm_warning: true\n## Set these proxy values in order to update package manager and docker daemon to use proxies\n#http_proxy: \"\"\n#https_proxy: \"\"\n## Refer to roles/kubespray-defaults/defaults/main.yml before modifying no_proxy\n#no_proxy: \"\"\n\n## Uncomment this if you want to force overlay/overlay2 as docker storage driver\n## Please note that overlay2 is only supported on newer kernels\n#docker_storage_options: -s overlay2\n\n# Uncomment this if you have more than 3 nameservers, then we'll only use the first 3.\n#docker_dns_servers_strict: false\n\n## Default packages to install within the cluster, f.e:\n#kpm_packages:\n# - name: kube-system/grafana\n\n## Certificate Management\n## This setting determines whether certs are generated via scripts or whether a\n## cluster of Hashicorp's Vault is started to issue certificates (using etcd\n## as a backend). Options are \"script\" or \"vault\"\n#cert_management: script\n\n# Set to true to allow pre-checks to fail and continue deployment\n#ignore_assert_errors: false\n\n## Etcd auto compaction retention for mvcc key value store in hour\n#etcd_compaction_retention: 0\n\n## Set level of detail for etcd exported metrics, specify 'extensive' to include histogram metrics.\n#etcd_metrics: basic\n\n## Etcd is restricted by default to 512M on systems under 4GB RAM, 512MB is not enough for much more than testing.\n## Set this if your etcd nodes have less than 4GB but you want more RAM for etcd. Set to 0 for unrestricted RAM.\n#etcd_memory_limit: \"512M\"\n\n# The read-only port for the Kubelet to serve on with no authentication/authorization. Uncomment to enable.\n#kube_read_only_port: 10255\n",
                            "filename": "config/group_vars/all.yml",
                            "id": "2b383f3d2f4391b772806219a9264c3b85fdfa1b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local"
                },
                "local_file.kubespray_hosts": {
                    "type": "local_file",
                    "depends_on": [
                        "data.template_file.kubespray_hosts_master.*",
                        "data.template_file.kubespray_hosts_master_list.*",
                        "data.template_file.kubespray_hosts_worker.*",
                        "data.template_file.kubespray_hosts_worker_list.*"
                    ],
                    "primary": {
                        "id": "97b4cccb57b7b8801eadd1e043d8412dc7f12ba0",
                        "attributes": {
                            "content": "k8s-kubespray-master-0 ansible_host=192.168.69.11\nk8s-kubespray-master-1 ansible_host=192.168.69.12\nk8s-kubespray-master-2 ansible_host=192.168.69.13\nk8s-kubespray-worker-0 ansible_host=192.168.69.21\nk8s-kubespray-worker-1 ansible_host=192.168.69.22\nk8s-kubespray-worker-2 ansible_host=192.168.69.23\n\n[kube-master]\nk8s-kubespray-master-0\nk8s-kubespray-master-1\nk8s-kubespray-master-2\n\n[etcd]\nk8s-kubespray-master-0\nk8s-kubespray-master-1\nk8s-kubespray-master-2\n\n[kube-node]\nk8s-kubespray-worker-0\nk8s-kubespray-worker-1\nk8s-kubespray-worker-2\n\n[k8s-cluster:children]\nkube-master\nkube-node",
                            "filename": "config/hosts.ini",
                            "id": "97b4cccb57b7b8801eadd1e043d8412dc7f12ba0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local"
                },
                "local_file.kubespray_k8s_cluster": {
                    "type": "local_file",
                    "depends_on": [
                        "data.template_file.kubespray_k8s_cluster"
                    ],
                    "primary": {
                        "id": "538b72894ebbcb6d3480f7e1004e1e663bc73b76",
                        "attributes": {
                            "content": "# Kubernetes configuration dirs and system namespace.\n# Those are where all the additional config stuff goes\n# the kubernetes normally puts in /srv/kubernetes.\n# This puts them in a sane location and namespace.\n# Editing those values will almost surely break something.\nkube_config_dir: /etc/kubernetes\nkube_script_dir: \"{{ bin_dir }}/kubernetes-scripts\"\nkube_manifest_dir: \"{{ kube_config_dir }}/manifests\"\n\n# This is where all the cert scripts and certs will be located\nkube_cert_dir: \"{{ kube_config_dir }}/ssl\"\n\n# This is where all of the bearer tokens will be stored\nkube_token_dir: \"{{ kube_config_dir }}/tokens\"\n\n# This is where to save basic auth file\nkube_users_dir: \"{{ kube_config_dir }}/users\"\n\nkube_api_anonymous_auth: true\n\n## Change this to use another Kubernetes version, e.g. a current beta release\nkube_version: v1.12.5\n\n# Where the binaries will be downloaded.\n# Note: ensure that you've enough disk space (about 1G)\nlocal_release_dir: \"/tmp/releases\"\n# Random shifts for retrying failed ops like pushing/downloading\nretry_stagger: 5\n\n# This is the group that the cert creation scripts chgrp the\n# cert files to. Not really changeable...\nkube_cert_group: kube-cert\n\n# Cluster Loglevel configuration\nkube_log_level: 2\n\n# Users to create for basic auth in Kubernetes API via HTTP\n# Optionally add groups for user\nkube_api_pwd: \"{{ lookup('password', inventory_dir + '/credentials/kube_user.creds length=15 chars=ascii_letters,digits') }}\"\nkube_users:\n  kube:\n    pass: \"{{kube_api_pwd}}\"\n    role: admin\n    groups:\n      - system:masters\n\n## It is possible to activate / deactivate selected authentication methods (basic auth, static token auth)\nkube_oidc_auth: true\n#kube_basic_auth: false\n#kube_token_auth: false\n\n\n## Variables for OpenID Connect Configuration https://kubernetes.io/docs/admin/authentication/\n## To use OpenID you have to deploy additional an OpenID Provider (e.g Dex, Keycloak, ...)\n\n#kube_oidc_url: \"https://k8s-kubespray-dex.inkubate.io:32000\"\n#kube_oidc_client_id: \"example-app\"\n## Optional settings for OIDC\n#kube_oidc_ca_file: \"{{ kube_cert_dir }}/ca.pem\"\n#kube_oidc_username_claim: \"email\"\n#kube_oidc_groups_claim: \"groups\"\n\n\n# Choose network plugin (cilium, calico, contiv, weave or flannel)\n# Can also be set to 'cloud', which lets the cloud provider setup appropriate routing\nkube_network_plugin: weave\n\n# weave's network password for encryption\n# if null then no network encryption\n# you can use --extra-vars to pass the password in command line\nweave_password: VMware1!\n\n# Weave uses consensus mode by default\n# Enabling seed mode allow to dynamically add or remove hosts\n# https://www.weave.works/docs/net/latest/ipam/\nweave_mode_seed: false\n\n# This two variable are automatically changed by the weave's role, do not manually change these values\n# To reset values :\n# weave_seed: uninitialized\n# weave_peers: uninitialized\nweave_seed: uninitialized\nweave_peers: uninitialized\n\n# Set the MTU of Weave (default 1376, Jumbo Frames: 8916)\nweave_mtu: 1376\n\n# Enable kubernetes network policies\nenable_network_policy: false\n\n# Kubernetes internal network for services, unused block of space.\nkube_service_addresses: 10.233.0.0/18\n\n# internal network. When used, it will assign IP\n# addresses from this range to individual pods.\n# This network must be unused in your network infrastructure!\nkube_pods_subnet: 10.233.64.0/18\n\n# internal network node size allocation (optional). This is the size allocated\n# to each node on your network.  With these defaults you should have\n# room for 4096 nodes with 254 pods per node.\nkube_network_node_prefix: 24\n\n# The port the API Server will be listening on.\nkube_apiserver_ip: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(1)|ipaddr('address') }}\"\nkube_apiserver_port: 6443 # (https)\nkube_apiserver_insecure_port: 8080 # (http)\n# Set to 0 to disable insecure port - Requires RBAC in authorization_modes and kube_api_anonymous_auth: true\n#kube_apiserver_insecure_port: 0 # (disabled)\n\n# Kube-proxy proxyMode configuration.\n# Can be ipvs, iptables\nkube_proxy_mode: iptables\n\n## Encrypting Secret Data at Rest (experimental)\nkube_encrypt_secret_data: false\n\n# DNS configuration.\n# Kubernetes cluster name, also will be used as DNS domain\ncluster_name: cluster.local\n# Subdomains of DNS domain to be resolved via /etc/resolv.conf for hostnet pods\nndots: 2\n# Can be dnsmasq_kubedns, kubedns, coredns, coredns_dual, manual or none\ndns_mode: kubedns\n# Set manual server if using a custom cluster DNS server\n#manual_dns_server: 10.x.x.x\n\n# Can be docker_dns, host_resolvconf or none\nresolvconf_mode: docker_dns\n# Deploy netchecker app to verify DNS resolve as an HTTP service\ndeploy_netchecker: false\n# Ip address of the kubernetes skydns service\nskydns_server: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(3)|ipaddr('address') }}\"\nskydns_server_secondary: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(4)|ipaddr('address') }}\"\ndnsmasq_dns_server: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(2)|ipaddr('address') }}\"\ndns_domain: \"{{ cluster_name }}\"\n\n# Path used to store Docker data\ndocker_daemon_graph: \"/var/lib/docker\"\n\n## A string of extra options to pass to the docker daemon.\n## This string should be exactly as you wish it to appear.\n## An obvious use case is allowing insecure-registry access\n## to self hosted registries like so:\n\ndocker_options: \"--insecure-registry={{ kube_service_addresses }} --graph={{ docker_daemon_graph }}  {{ docker_log_opts }}\"\ndocker_bin_dir: \"/usr/bin\"\n\n# Settings for containerized control plane (etcd/kubelet/secrets)\netcd_deployment_type: docker\nkubelet_deployment_type: host\nvault_deployment_type: docker\nhelm_deployment_type: host\n\n# K8s image pull policy (imagePullPolicy)\nk8s_image_pull_policy: IfNotPresent\n\n# Kubernetes dashboard\n# RBAC required. see docs/getting-started.md for access details.\ndashboard_enabled: true\n\n# Monitoring apps for k8s\nefk_enabled: false\n\n# Helm deployment\nhelm_enabled: true\n\n# Istio deployment\nistio_enabled: false\n\n# Registry deployment\nregistry_enabled: false\n# registry_namespace: \"{{ system_namespace }}\"\n# registry_storage_class: \"\"\n# registry_disk_size: \"10Gi\"\n\n# Local volume provisioner deployment\nlocal_volume_provisioner_enabled: false\n# local_volume_provisioner_namespace: \"{{ system_namespace }}\"\n# local_volume_provisioner_base_dir: /mnt/disks\n# local_volume_provisioner_mount_dir: /mnt/disks\n# local_volume_provisioner_storage_class: local-storage\n\n# CephFS provisioner deployment\ncephfs_provisioner_enabled: false\n# cephfs_provisioner_namespace: \"{{ system_namespace }}\"\n# cephfs_provisioner_cluster: ceph\n# cephfs_provisioner_monitors:\n#   - 172.24.0.1:6789\n#   - 172.24.0.2:6789\n#   - 172.24.0.3:6789\n# cephfs_provisioner_admin_id: admin\n# cephfs_provisioner_secret: secret\n# cephfs_provisioner_storage_class: cephfs\n\n# Nginx ingress controller deployment\ningress_nginx_enabled: false\n# ingress_nginx_host_network: false\n# ingress_nginx_namespace: \"ingress-nginx\"\n# ingress_nginx_insecure_port: 80\n# ingress_nginx_secure_port: 443\n# ingress_nginx_configmap:\n#   map-hash-bucket-size: \"128\"\n#   ssl-protocols: \"SSLv2\"\n# ingress_nginx_configmap_tcp_services:\n#   9000: \"default/example-go:8080\"\n# ingress_nginx_configmap_udp_services:\n#   53: \"kube-system/kube-dns:53\"\n\n# Cert manager deployment\ncert_manager_enabled: false\n# cert_manager_namespace: \"cert-manager\"\n\n# Add Persistent Volumes Storage Class for corresponding cloud provider ( OpenStack is only supported now )\npersistent_volumes_enabled: false\n\n# Make a copy of kubeconfig on the host that runs Ansible in {{ inventory_dir }}/artifacts\n# kubeconfig_localhost: false\n# Download kubectl onto the host that runs Ansible in {{ bin_dir }}\n# kubectl_localhost: false\n\n# dnsmasq\n# dnsmasq_upstream_dns_servers:\n#  - /resolvethiszone.with/10.0.4.250\n#  - 8.8.8.8\n\n#  Enable creation of QoS cgroup hierarchy, if true top level QoS and pod cgroups are created. (default true)\n# kubelet_cgroups_per_qos: true\n\n# A comma separated list of levels of node allocatable enforcement to be enforced by kubelet.\n# Acceptable options are 'pods', 'system-reserved', 'kube-reserved' and ''. Default is \"\".\n# kubelet_enforce_node_allocatable: pods\n\n# kubelet authentication token webhook (default false)\nkubelet_authentication_token_webhook: true\n\n## Supplementary addresses that can be added in kubernetes ssl keys.\n## That can be useful for example to setup a keepalived virtual IP\n# supplementary_addresses_in_ssl_keys: [10.0.0.1, 10.0.0.2, 10.0.0.3]\n\n## Running on top of openstack vms with cinder enabled may lead to unschedulable pods due to NoVolumeZoneConflict restriction in kube-scheduler.\n## See https://github.com/kubernetes-incubator/kubespray/issues/2141\n## Set this variable to true to get rid of this issue\nvolume_cross_zone_attachment: false\n",
                            "filename": "config/group_vars/k8s-cluster.yml",
                            "id": "538b72894ebbcb6d3480f7e1004e1e663bc73b76"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local"
                },
                "null_resource.config_permission": {
                    "type": "null_resource",
                    "depends_on": [
                        "local_file.haproxy",
                        "local_file.kubespray_all",
                        "local_file.kubespray_hosts",
                        "local_file.kubespray_k8s_cluster"
                    ],
                    "primary": {
                        "id": "3045318958246979049",
                        "attributes": {
                            "id": "3045318958246979049"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                },
                "null_resource.kubectl_configuration": {
                    "type": "null_resource",
                    "depends_on": [
                        "null_resource.kubespray_create"
                    ],
                    "primary": {
                        "id": "4788860795498279375",
                        "attributes": {
                            "id": "4788860795498279375"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                },
                "null_resource.kubespray_create": {
                    "type": "null_resource",
                    "depends_on": [
                        "local_file.kubespray_all",
                        "local_file.kubespray_hosts",
                        "local_file.kubespray_k8s_cluster",
                        "null_resource.kubespray_download",
                        "vsphere_virtual_machine.haproxy",
                        "vsphere_virtual_machine.master",
                        "vsphere_virtual_machine.worker"
                    ],
                    "primary": {
                        "id": "4085419673624150468",
                        "attributes": {
                            "id": "4085419673624150468"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                },
                "null_resource.kubespray_download": {
                    "type": "null_resource",
                    "depends_on": [],
                    "primary": {
                        "id": "5250021281694522528",
                        "attributes": {
                            "id": "5250021281694522528"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                },
                "vsphere_compute_cluster_vm_anti_affinity_rule.master_anti_affinity_rule": {
                    "type": "vsphere_compute_cluster_vm_anti_affinity_rule",
                    "depends_on": [
                        "data.vsphere_compute_cluster.cluster",
                        "vsphere_virtual_machine.master.*"
                    ],
                    "primary": {
                        "id": "domain-c3674:305",
                        "attributes": {
                            "compute_cluster_id": "domain-c3674",
                            "enabled": "true",
                            "id": "domain-c3674:305",
                            "mandatory": "false",
                            "name": "k8s-kubespray-master-anti-affinity-rule",
                            "virtual_machine_ids.#": "3",
                            "virtual_machine_ids.1126726587": "42205432-a43e-5f27-c1df-8723654fe7eb",
                            "virtual_machine_ids.3300068625": "42206b99-6a4f-bc54-647c-d30d05f8d9e1",
                            "virtual_machine_ids.62242803": "42208231-a5e0-1363-97cc-6dee7228a88b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_folder.folder": {
                    "type": "vsphere_folder",
                    "depends_on": [
                        "data.vsphere_datacenter.dc"
                    ],
                    "primary": {
                        "id": "group-v4156",
                        "attributes": {
                            "custom_attributes.%": "0",
                            "datacenter_id": "datacenter-2",
                            "id": "group-v4156",
                            "path": "k8s-hard-way",
                            "tags.#": "0",
                            "type": "vm"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_virtual_machine.haproxy": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.vsphere_datastore.datastore",
                        "data.vsphere_network.network",
                        "data.vsphere_resource_pool.pool",
                        "data.vsphere_virtual_machine.template",
                        "vsphere_folder.folder"
                    ],
                    "primary": {
                        "id": "422042e3-8f19-3508-181f-35251e62da90",
                        "attributes": {
                            "alternate_guest_name": "",
                            "annotation": "",
                            "boot_delay": "0",
                            "boot_retry_delay": "10000",
                            "boot_retry_enabled": "false",
                            "cdrom.#": "0",
                            "change_version": "2019-01-25T02:47:41.620677Z",
                            "clone.#": "1",
                            "clone.0.customize.#": "1",
                            "clone.0.customize.0.dns_server_list.#": "1",
                            "clone.0.customize.0.dns_server_list.0": "192.168.64.60",
                            "clone.0.customize.0.dns_suffix_list.#": "0",
                            "clone.0.customize.0.ipv4_gateway": "192.168.69.1",
                            "clone.0.customize.0.ipv6_gateway": "",
                            "clone.0.customize.0.linux_options.#": "1",
                            "clone.0.customize.0.linux_options.0.domain": "vballin.com",
                            "clone.0.customize.0.linux_options.0.host_name": "k8s-kubespray-haproxy",
                            "clone.0.customize.0.linux_options.0.hw_clock_utc": "true",
                            "clone.0.customize.0.linux_options.0.time_zone": "",
                            "clone.0.customize.0.network_interface.#": "1",
                            "clone.0.customize.0.network_interface.0.dns_domain": "",
                            "clone.0.customize.0.network_interface.0.dns_server_list.#": "0",
                            "clone.0.customize.0.network_interface.0.ipv4_address": "192.168.69.10",
                            "clone.0.customize.0.network_interface.0.ipv4_netmask": "24",
                            "clone.0.customize.0.network_interface.0.ipv6_address": "",
                            "clone.0.customize.0.network_interface.0.ipv6_netmask": "0",
                            "clone.0.customize.0.timeout": "10",
                            "clone.0.customize.0.windows_options.#": "0",
                            "clone.0.customize.0.windows_sysprep_text": "",
                            "clone.0.linked_clone": "true",
                            "clone.0.template_uuid": "42205dac-0aaa-3901-19f5-20358a09b442",
                            "clone.0.timeout": "30",
                            "cpu_hot_add_enabled": "false",
                            "cpu_hot_remove_enabled": "false",
                            "cpu_limit": "-1",
                            "cpu_performance_counters_enabled": "false",
                            "cpu_reservation": "0",
                            "cpu_share_count": "1000",
                            "cpu_share_level": "normal",
                            "custom_attributes.%": "0",
                            "datastore_id": "datastore-484",
                            "default_ip_address": "192.168.69.10",
                            "disk.#": "1",
                            "disk.0.attach": "false",
                            "disk.0.datastore_id": "datastore-484",
                            "disk.0.device_address": "scsi:0:0",
                            "disk.0.disk_mode": "persistent",
                            "disk.0.disk_sharing": "sharingNone",
                            "disk.0.eagerly_scrub": "false",
                            "disk.0.io_limit": "-1",
                            "disk.0.io_reservation": "0",
                            "disk.0.io_share_count": "1000",
                            "disk.0.io_share_level": "normal",
                            "disk.0.keep_on_remove": "false",
                            "disk.0.key": "2000",
                            "disk.0.label": "k8s-kubespray-haproxy.vmdk",
                            "disk.0.name": "",
                            "disk.0.path": "k8s-kubespray-haproxy/k8s-kubespray-haproxy.vmdk",
                            "disk.0.size": "40",
                            "disk.0.thin_provisioned": "true",
                            "disk.0.unit_number": "0",
                            "disk.0.uuid": "6000C298-4976-f720-3f9f-627aa74d9f71",
                            "disk.0.write_through": "false",
                            "efi_secure_boot_enabled": "false",
                            "enable_disk_uuid": "false",
                            "enable_logging": "false",
                            "ept_rvi_mode": "automatic",
                            "extra_config.%": "0",
                            "firmware": "bios",
                            "folder": "k8s-hard-way",
                            "force_power_off": "true",
                            "guest_id": "ubuntu64Guest",
                            "guest_ip_addresses.#": "2",
                            "guest_ip_addresses.0": "192.168.69.10",
                            "guest_ip_addresses.1": "fe80::250:56ff:fea0:29a4",
                            "host_system_id": "host-3681",
                            "hv_mode": "hvAuto",
                            "id": "422042e3-8f19-3508-181f-35251e62da90",
                            "latency_sensitivity": "normal",
                            "memory": "1024",
                            "memory_hot_add_enabled": "false",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_count": "10240",
                            "memory_share_level": "normal",
                            "migrate_wait_timeout": "30",
                            "moid": "vm-4157",
                            "name": "k8s-kubespray-haproxy",
                            "nested_hv_enabled": "false",
                            "network_interface.#": "1",
                            "network_interface.0.adapter_type": "vmxnet3",
                            "network_interface.0.bandwidth_limit": "-1",
                            "network_interface.0.bandwidth_reservation": "0",
                            "network_interface.0.bandwidth_share_count": "50",
                            "network_interface.0.bandwidth_share_level": "normal",
                            "network_interface.0.device_address": "pci:0:7",
                            "network_interface.0.key": "4000",
                            "network_interface.0.mac_address": "00:50:56:a0:29:a4",
                            "network_interface.0.network_id": "dvportgroup-604",
                            "network_interface.0.use_static_mac": "false",
                            "num_cores_per_socket": "1",
                            "num_cpus": "1",
                            "reboot_required": "false",
                            "resource_pool_id": "resgroup-4138",
                            "run_tools_scripts_after_power_on": "true",
                            "run_tools_scripts_after_resume": "true",
                            "run_tools_scripts_before_guest_reboot": "false",
                            "run_tools_scripts_before_guest_shutdown": "true",
                            "run_tools_scripts_before_guest_standby": "true",
                            "scsi_controller_count": "1",
                            "scsi_type": "pvscsi",
                            "shutdown_wait_timeout": "3",
                            "swap_placement_policy": "inherit",
                            "sync_time_with_host": "false",
                            "tags.#": "0",
                            "uuid": "422042e3-8f19-3508-181f-35251e62da90",
                            "vapp_transport.#": "0",
                            "vmware_tools_status": "guestToolsRunning",
                            "vmx_path": "k8s-kubespray-haproxy/k8s-kubespray-haproxy.vmx",
                            "wait_for_guest_net_routable": "true",
                            "wait_for_guest_net_timeout": "5"
                        },
                        "meta": {
                            "schema_version": "3"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_virtual_machine.master.0": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.vsphere_datastore.datastore",
                        "data.vsphere_network.network",
                        "data.vsphere_resource_pool.pool",
                        "data.vsphere_virtual_machine.template",
                        "vsphere_folder.folder",
                        "vsphere_virtual_machine.haproxy"
                    ],
                    "primary": {
                        "id": "42206b99-6a4f-bc54-647c-d30d05f8d9e1",
                        "attributes": {
                            "alternate_guest_name": "",
                            "annotation": "",
                            "boot_delay": "0",
                            "boot_retry_delay": "10000",
                            "boot_retry_enabled": "false",
                            "cdrom.#": "0",
                            "change_version": "2019-01-25T02:50:02.567408Z",
                            "clone.#": "1",
                            "clone.0.customize.#": "1",
                            "clone.0.customize.0.dns_server_list.#": "1",
                            "clone.0.customize.0.dns_server_list.0": "192.168.64.60",
                            "clone.0.customize.0.dns_suffix_list.#": "0",
                            "clone.0.customize.0.ipv4_gateway": "192.168.69.1",
                            "clone.0.customize.0.ipv6_gateway": "",
                            "clone.0.customize.0.linux_options.#": "1",
                            "clone.0.customize.0.linux_options.0.domain": "vballin.com",
                            "clone.0.customize.0.linux_options.0.host_name": "k8s-kubespray-0",
                            "clone.0.customize.0.linux_options.0.hw_clock_utc": "true",
                            "clone.0.customize.0.linux_options.0.time_zone": "",
                            "clone.0.customize.0.network_interface.#": "1",
                            "clone.0.customize.0.network_interface.0.dns_domain": "",
                            "clone.0.customize.0.network_interface.0.dns_server_list.#": "0",
                            "clone.0.customize.0.network_interface.0.ipv4_address": "192.168.69.11",
                            "clone.0.customize.0.network_interface.0.ipv4_netmask": "24",
                            "clone.0.customize.0.network_interface.0.ipv6_address": "",
                            "clone.0.customize.0.network_interface.0.ipv6_netmask": "0",
                            "clone.0.customize.0.timeout": "10",
                            "clone.0.customize.0.windows_options.#": "0",
                            "clone.0.customize.0.windows_sysprep_text": "",
                            "clone.0.linked_clone": "true",
                            "clone.0.template_uuid": "42205dac-0aaa-3901-19f5-20358a09b442",
                            "clone.0.timeout": "30",
                            "cpu_hot_add_enabled": "false",
                            "cpu_hot_remove_enabled": "false",
                            "cpu_limit": "-1",
                            "cpu_performance_counters_enabled": "false",
                            "cpu_reservation": "0",
                            "cpu_share_count": "1000",
                            "cpu_share_level": "normal",
                            "custom_attributes.%": "0",
                            "datastore_id": "datastore-484",
                            "default_ip_address": "192.168.69.11",
                            "disk.#": "1",
                            "disk.0.attach": "false",
                            "disk.0.datastore_id": "datastore-484",
                            "disk.0.device_address": "scsi:0:0",
                            "disk.0.disk_mode": "persistent",
                            "disk.0.disk_sharing": "sharingNone",
                            "disk.0.eagerly_scrub": "false",
                            "disk.0.io_limit": "-1",
                            "disk.0.io_reservation": "0",
                            "disk.0.io_share_count": "1000",
                            "disk.0.io_share_level": "normal",
                            "disk.0.keep_on_remove": "false",
                            "disk.0.key": "2000",
                            "disk.0.label": "k8s-kubespray-master-0.vmdk",
                            "disk.0.name": "",
                            "disk.0.path": "k8s-kubespray-master-0/k8s-kubespray-master-0.vmdk",
                            "disk.0.size": "40",
                            "disk.0.thin_provisioned": "true",
                            "disk.0.unit_number": "0",
                            "disk.0.uuid": "6000C298-4976-f720-3f9f-627aa74d9f71",
                            "disk.0.write_through": "false",
                            "efi_secure_boot_enabled": "false",
                            "enable_disk_uuid": "true",
                            "enable_logging": "false",
                            "ept_rvi_mode": "automatic",
                            "extra_config.%": "0",
                            "firmware": "bios",
                            "folder": "k8s-hard-way",
                            "force_power_off": "true",
                            "guest_id": "ubuntu64Guest",
                            "guest_ip_addresses.#": "2",
                            "guest_ip_addresses.0": "192.168.69.11",
                            "guest_ip_addresses.1": "fe80::250:56ff:fea0:435d",
                            "host_system_id": "host-3678",
                            "hv_mode": "hvAuto",
                            "id": "42206b99-6a4f-bc54-647c-d30d05f8d9e1",
                            "latency_sensitivity": "normal",
                            "memory": "2048",
                            "memory_hot_add_enabled": "false",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_count": "20480",
                            "memory_share_level": "normal",
                            "migrate_wait_timeout": "30",
                            "moid": "vm-4160",
                            "name": "k8s-kubespray-master-0",
                            "nested_hv_enabled": "false",
                            "network_interface.#": "1",
                            "network_interface.0.adapter_type": "vmxnet3",
                            "network_interface.0.bandwidth_limit": "-1",
                            "network_interface.0.bandwidth_reservation": "0",
                            "network_interface.0.bandwidth_share_count": "50",
                            "network_interface.0.bandwidth_share_level": "normal",
                            "network_interface.0.device_address": "pci:0:7",
                            "network_interface.0.key": "4000",
                            "network_interface.0.mac_address": "00:50:56:a0:43:5d",
                            "network_interface.0.network_id": "dvportgroup-604",
                            "network_interface.0.use_static_mac": "false",
                            "num_cores_per_socket": "1",
                            "num_cpus": "1",
                            "reboot_required": "false",
                            "resource_pool_id": "resgroup-4138",
                            "run_tools_scripts_after_power_on": "true",
                            "run_tools_scripts_after_resume": "true",
                            "run_tools_scripts_before_guest_reboot": "false",
                            "run_tools_scripts_before_guest_shutdown": "true",
                            "run_tools_scripts_before_guest_standby": "true",
                            "scsi_controller_count": "1",
                            "scsi_type": "pvscsi",
                            "shutdown_wait_timeout": "3",
                            "swap_placement_policy": "inherit",
                            "sync_time_with_host": "false",
                            "tags.#": "0",
                            "uuid": "42206b99-6a4f-bc54-647c-d30d05f8d9e1",
                            "vapp_transport.#": "0",
                            "vmware_tools_status": "guestToolsRunning",
                            "vmx_path": "k8s-kubespray-master-0/k8s-kubespray-master-0.vmx",
                            "wait_for_guest_net_routable": "true",
                            "wait_for_guest_net_timeout": "5"
                        },
                        "meta": {
                            "schema_version": "3"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_virtual_machine.master.1": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.vsphere_datastore.datastore",
                        "data.vsphere_network.network",
                        "data.vsphere_resource_pool.pool",
                        "data.vsphere_virtual_machine.template",
                        "vsphere_folder.folder",
                        "vsphere_virtual_machine.haproxy"
                    ],
                    "primary": {
                        "id": "42205432-a43e-5f27-c1df-8723654fe7eb",
                        "attributes": {
                            "alternate_guest_name": "",
                            "annotation": "",
                            "boot_delay": "0",
                            "boot_retry_delay": "10000",
                            "boot_retry_enabled": "false",
                            "cdrom.#": "0",
                            "change_version": "2019-01-25T02:50:00.526876Z",
                            "clone.#": "1",
                            "clone.0.customize.#": "1",
                            "clone.0.customize.0.dns_server_list.#": "1",
                            "clone.0.customize.0.dns_server_list.0": "192.168.64.60",
                            "clone.0.customize.0.dns_suffix_list.#": "0",
                            "clone.0.customize.0.ipv4_gateway": "192.168.69.1",
                            "clone.0.customize.0.ipv6_gateway": "",
                            "clone.0.customize.0.linux_options.#": "1",
                            "clone.0.customize.0.linux_options.0.domain": "vballin.com",
                            "clone.0.customize.0.linux_options.0.host_name": "k8s-kubespray-1",
                            "clone.0.customize.0.linux_options.0.hw_clock_utc": "true",
                            "clone.0.customize.0.linux_options.0.time_zone": "",
                            "clone.0.customize.0.network_interface.#": "1",
                            "clone.0.customize.0.network_interface.0.dns_domain": "",
                            "clone.0.customize.0.network_interface.0.dns_server_list.#": "0",
                            "clone.0.customize.0.network_interface.0.ipv4_address": "192.168.69.12",
                            "clone.0.customize.0.network_interface.0.ipv4_netmask": "24",
                            "clone.0.customize.0.network_interface.0.ipv6_address": "",
                            "clone.0.customize.0.network_interface.0.ipv6_netmask": "0",
                            "clone.0.customize.0.timeout": "10",
                            "clone.0.customize.0.windows_options.#": "0",
                            "clone.0.customize.0.windows_sysprep_text": "",
                            "clone.0.linked_clone": "true",
                            "clone.0.template_uuid": "42205dac-0aaa-3901-19f5-20358a09b442",
                            "clone.0.timeout": "30",
                            "cpu_hot_add_enabled": "false",
                            "cpu_hot_remove_enabled": "false",
                            "cpu_limit": "-1",
                            "cpu_performance_counters_enabled": "false",
                            "cpu_reservation": "0",
                            "cpu_share_count": "1000",
                            "cpu_share_level": "normal",
                            "custom_attributes.%": "0",
                            "datastore_id": "datastore-484",
                            "default_ip_address": "192.168.69.12",
                            "disk.#": "1",
                            "disk.0.attach": "false",
                            "disk.0.datastore_id": "datastore-484",
                            "disk.0.device_address": "scsi:0:0",
                            "disk.0.disk_mode": "persistent",
                            "disk.0.disk_sharing": "sharingNone",
                            "disk.0.eagerly_scrub": "false",
                            "disk.0.io_limit": "-1",
                            "disk.0.io_reservation": "0",
                            "disk.0.io_share_count": "1000",
                            "disk.0.io_share_level": "normal",
                            "disk.0.keep_on_remove": "false",
                            "disk.0.key": "2000",
                            "disk.0.label": "k8s-kubespray-master-1.vmdk",
                            "disk.0.name": "",
                            "disk.0.path": "k8s-kubespray-master-1/k8s-kubespray-master-1.vmdk",
                            "disk.0.size": "40",
                            "disk.0.thin_provisioned": "true",
                            "disk.0.unit_number": "0",
                            "disk.0.uuid": "6000C298-4976-f720-3f9f-627aa74d9f71",
                            "disk.0.write_through": "false",
                            "efi_secure_boot_enabled": "false",
                            "enable_disk_uuid": "true",
                            "enable_logging": "false",
                            "ept_rvi_mode": "automatic",
                            "extra_config.%": "0",
                            "firmware": "bios",
                            "folder": "k8s-hard-way",
                            "force_power_off": "true",
                            "guest_id": "ubuntu64Guest",
                            "guest_ip_addresses.#": "2",
                            "guest_ip_addresses.0": "192.168.69.12",
                            "guest_ip_addresses.1": "fe80::250:56ff:fea0:64db",
                            "host_system_id": "host-3688",
                            "hv_mode": "hvAuto",
                            "id": "42205432-a43e-5f27-c1df-8723654fe7eb",
                            "latency_sensitivity": "normal",
                            "memory": "2048",
                            "memory_hot_add_enabled": "false",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_count": "20480",
                            "memory_share_level": "normal",
                            "migrate_wait_timeout": "30",
                            "moid": "vm-4159",
                            "name": "k8s-kubespray-master-1",
                            "nested_hv_enabled": "false",
                            "network_interface.#": "1",
                            "network_interface.0.adapter_type": "vmxnet3",
                            "network_interface.0.bandwidth_limit": "-1",
                            "network_interface.0.bandwidth_reservation": "0",
                            "network_interface.0.bandwidth_share_count": "50",
                            "network_interface.0.bandwidth_share_level": "normal",
                            "network_interface.0.device_address": "pci:0:7",
                            "network_interface.0.key": "4000",
                            "network_interface.0.mac_address": "00:50:56:a0:64:db",
                            "network_interface.0.network_id": "dvportgroup-604",
                            "network_interface.0.use_static_mac": "false",
                            "num_cores_per_socket": "1",
                            "num_cpus": "1",
                            "reboot_required": "false",
                            "resource_pool_id": "resgroup-4138",
                            "run_tools_scripts_after_power_on": "true",
                            "run_tools_scripts_after_resume": "true",
                            "run_tools_scripts_before_guest_reboot": "false",
                            "run_tools_scripts_before_guest_shutdown": "true",
                            "run_tools_scripts_before_guest_standby": "true",
                            "scsi_controller_count": "1",
                            "scsi_type": "pvscsi",
                            "shutdown_wait_timeout": "3",
                            "swap_placement_policy": "inherit",
                            "sync_time_with_host": "false",
                            "tags.#": "0",
                            "uuid": "42205432-a43e-5f27-c1df-8723654fe7eb",
                            "vapp_transport.#": "0",
                            "vmware_tools_status": "guestToolsRunning",
                            "vmx_path": "k8s-kubespray-master-1/k8s-kubespray-master-1.vmx",
                            "wait_for_guest_net_routable": "true",
                            "wait_for_guest_net_timeout": "5"
                        },
                        "meta": {
                            "schema_version": "3"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_virtual_machine.master.2": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.vsphere_datastore.datastore",
                        "data.vsphere_network.network",
                        "data.vsphere_resource_pool.pool",
                        "data.vsphere_virtual_machine.template",
                        "vsphere_folder.folder",
                        "vsphere_virtual_machine.haproxy"
                    ],
                    "primary": {
                        "id": "42208231-a5e0-1363-97cc-6dee7228a88b",
                        "attributes": {
                            "alternate_guest_name": "",
                            "annotation": "",
                            "boot_delay": "0",
                            "boot_retry_delay": "10000",
                            "boot_retry_enabled": "false",
                            "cdrom.#": "0",
                            "change_version": "2019-01-25T02:50:22.501128Z",
                            "clone.#": "1",
                            "clone.0.customize.#": "1",
                            "clone.0.customize.0.dns_server_list.#": "1",
                            "clone.0.customize.0.dns_server_list.0": "192.168.64.60",
                            "clone.0.customize.0.dns_suffix_list.#": "0",
                            "clone.0.customize.0.ipv4_gateway": "192.168.69.1",
                            "clone.0.customize.0.ipv6_gateway": "",
                            "clone.0.customize.0.linux_options.#": "1",
                            "clone.0.customize.0.linux_options.0.domain": "vballin.com",
                            "clone.0.customize.0.linux_options.0.host_name": "k8s-kubespray-2",
                            "clone.0.customize.0.linux_options.0.hw_clock_utc": "true",
                            "clone.0.customize.0.linux_options.0.time_zone": "",
                            "clone.0.customize.0.network_interface.#": "1",
                            "clone.0.customize.0.network_interface.0.dns_domain": "",
                            "clone.0.customize.0.network_interface.0.dns_server_list.#": "0",
                            "clone.0.customize.0.network_interface.0.ipv4_address": "192.168.69.13",
                            "clone.0.customize.0.network_interface.0.ipv4_netmask": "24",
                            "clone.0.customize.0.network_interface.0.ipv6_address": "",
                            "clone.0.customize.0.network_interface.0.ipv6_netmask": "0",
                            "clone.0.customize.0.timeout": "10",
                            "clone.0.customize.0.windows_options.#": "0",
                            "clone.0.customize.0.windows_sysprep_text": "",
                            "clone.0.linked_clone": "true",
                            "clone.0.template_uuid": "42205dac-0aaa-3901-19f5-20358a09b442",
                            "clone.0.timeout": "30",
                            "cpu_hot_add_enabled": "false",
                            "cpu_hot_remove_enabled": "false",
                            "cpu_limit": "-1",
                            "cpu_performance_counters_enabled": "false",
                            "cpu_reservation": "0",
                            "cpu_share_count": "1000",
                            "cpu_share_level": "normal",
                            "custom_attributes.%": "0",
                            "datastore_id": "datastore-484",
                            "default_ip_address": "192.168.69.13",
                            "disk.#": "1",
                            "disk.0.attach": "false",
                            "disk.0.datastore_id": "datastore-484",
                            "disk.0.device_address": "scsi:0:0",
                            "disk.0.disk_mode": "persistent",
                            "disk.0.disk_sharing": "sharingNone",
                            "disk.0.eagerly_scrub": "false",
                            "disk.0.io_limit": "-1",
                            "disk.0.io_reservation": "0",
                            "disk.0.io_share_count": "1000",
                            "disk.0.io_share_level": "normal",
                            "disk.0.keep_on_remove": "false",
                            "disk.0.key": "2000",
                            "disk.0.label": "k8s-kubespray-master-2.vmdk",
                            "disk.0.name": "",
                            "disk.0.path": "k8s-kubespray-master-2/k8s-kubespray-master-2.vmdk",
                            "disk.0.size": "40",
                            "disk.0.thin_provisioned": "true",
                            "disk.0.unit_number": "0",
                            "disk.0.uuid": "6000C298-4976-f720-3f9f-627aa74d9f71",
                            "disk.0.write_through": "false",
                            "efi_secure_boot_enabled": "false",
                            "enable_disk_uuid": "true",
                            "enable_logging": "false",
                            "ept_rvi_mode": "automatic",
                            "extra_config.%": "0",
                            "firmware": "bios",
                            "folder": "k8s-hard-way",
                            "force_power_off": "true",
                            "guest_id": "ubuntu64Guest",
                            "guest_ip_addresses.#": "2",
                            "guest_ip_addresses.0": "192.168.69.13",
                            "guest_ip_addresses.1": "fe80::250:56ff:fea0:7f1b",
                            "host_system_id": "host-3681",
                            "hv_mode": "hvAuto",
                            "id": "42208231-a5e0-1363-97cc-6dee7228a88b",
                            "latency_sensitivity": "normal",
                            "memory": "2048",
                            "memory_hot_add_enabled": "false",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_count": "20480",
                            "memory_share_level": "normal",
                            "migrate_wait_timeout": "30",
                            "moid": "vm-4158",
                            "name": "k8s-kubespray-master-2",
                            "nested_hv_enabled": "false",
                            "network_interface.#": "1",
                            "network_interface.0.adapter_type": "vmxnet3",
                            "network_interface.0.bandwidth_limit": "-1",
                            "network_interface.0.bandwidth_reservation": "0",
                            "network_interface.0.bandwidth_share_count": "50",
                            "network_interface.0.bandwidth_share_level": "normal",
                            "network_interface.0.device_address": "pci:0:7",
                            "network_interface.0.key": "4000",
                            "network_interface.0.mac_address": "00:50:56:a0:7f:1b",
                            "network_interface.0.network_id": "dvportgroup-604",
                            "network_interface.0.use_static_mac": "false",
                            "num_cores_per_socket": "1",
                            "num_cpus": "1",
                            "reboot_required": "false",
                            "resource_pool_id": "resgroup-4138",
                            "run_tools_scripts_after_power_on": "true",
                            "run_tools_scripts_after_resume": "true",
                            "run_tools_scripts_before_guest_reboot": "false",
                            "run_tools_scripts_before_guest_shutdown": "true",
                            "run_tools_scripts_before_guest_standby": "true",
                            "scsi_controller_count": "1",
                            "scsi_type": "pvscsi",
                            "shutdown_wait_timeout": "3",
                            "swap_placement_policy": "inherit",
                            "sync_time_with_host": "false",
                            "tags.#": "0",
                            "uuid": "42208231-a5e0-1363-97cc-6dee7228a88b",
                            "vapp_transport.#": "0",
                            "vmware_tools_status": "guestToolsRunning",
                            "vmx_path": "k8s-kubespray-master-2/k8s-kubespray-master-2.vmx",
                            "wait_for_guest_net_routable": "true",
                            "wait_for_guest_net_timeout": "5"
                        },
                        "meta": {
                            "schema_version": "3"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_virtual_machine.worker.0": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.vsphere_datastore.datastore",
                        "data.vsphere_network.network",
                        "data.vsphere_resource_pool.pool",
                        "data.vsphere_virtual_machine.template",
                        "local_file.kubespray_all",
                        "local_file.kubespray_hosts",
                        "local_file.kubespray_k8s_cluster",
                        "vsphere_folder.folder",
                        "vsphere_virtual_machine.master"
                    ],
                    "primary": {
                        "id": "42203a6f-239c-73b9-5cbd-102036ff69ea",
                        "attributes": {
                            "alternate_guest_name": "",
                            "annotation": "",
                            "boot_delay": "0",
                            "boot_retry_delay": "10000",
                            "boot_retry_enabled": "false",
                            "cdrom.#": "0",
                            "change_version": "2019-01-25T02:51:11.617367Z",
                            "clone.#": "1",
                            "clone.0.customize.#": "1",
                            "clone.0.customize.0.dns_server_list.#": "1",
                            "clone.0.customize.0.dns_server_list.0": "192.168.64.60",
                            "clone.0.customize.0.dns_suffix_list.#": "0",
                            "clone.0.customize.0.ipv4_gateway": "192.168.69.1",
                            "clone.0.customize.0.ipv6_gateway": "",
                            "clone.0.customize.0.linux_options.#": "1",
                            "clone.0.customize.0.linux_options.0.domain": "vballin.com",
                            "clone.0.customize.0.linux_options.0.host_name": "k8s-kubespray-worker-0",
                            "clone.0.customize.0.linux_options.0.hw_clock_utc": "true",
                            "clone.0.customize.0.linux_options.0.time_zone": "",
                            "clone.0.customize.0.network_interface.#": "1",
                            "clone.0.customize.0.network_interface.0.dns_domain": "",
                            "clone.0.customize.0.network_interface.0.dns_server_list.#": "0",
                            "clone.0.customize.0.network_interface.0.ipv4_address": "192.168.69.21",
                            "clone.0.customize.0.network_interface.0.ipv4_netmask": "24",
                            "clone.0.customize.0.network_interface.0.ipv6_address": "",
                            "clone.0.customize.0.network_interface.0.ipv6_netmask": "0",
                            "clone.0.customize.0.timeout": "10",
                            "clone.0.customize.0.windows_options.#": "0",
                            "clone.0.customize.0.windows_sysprep_text": "",
                            "clone.0.linked_clone": "true",
                            "clone.0.template_uuid": "42205dac-0aaa-3901-19f5-20358a09b442",
                            "clone.0.timeout": "30",
                            "cpu_hot_add_enabled": "false",
                            "cpu_hot_remove_enabled": "false",
                            "cpu_limit": "-1",
                            "cpu_performance_counters_enabled": "false",
                            "cpu_reservation": "0",
                            "cpu_share_count": "1000",
                            "cpu_share_level": "normal",
                            "custom_attributes.%": "0",
                            "datastore_id": "datastore-484",
                            "default_ip_address": "192.168.69.21",
                            "disk.#": "1",
                            "disk.0.attach": "false",
                            "disk.0.datastore_id": "datastore-484",
                            "disk.0.device_address": "scsi:0:0",
                            "disk.0.disk_mode": "persistent",
                            "disk.0.disk_sharing": "sharingNone",
                            "disk.0.eagerly_scrub": "false",
                            "disk.0.io_limit": "-1",
                            "disk.0.io_reservation": "0",
                            "disk.0.io_share_count": "1000",
                            "disk.0.io_share_level": "normal",
                            "disk.0.keep_on_remove": "false",
                            "disk.0.key": "2000",
                            "disk.0.label": "k8s-kubespray-worker-0.vmdk",
                            "disk.0.name": "",
                            "disk.0.path": "k8s-kubespray-worker-0/k8s-kubespray-worker-0.vmdk",
                            "disk.0.size": "40",
                            "disk.0.thin_provisioned": "true",
                            "disk.0.unit_number": "0",
                            "disk.0.uuid": "6000C298-4976-f720-3f9f-627aa74d9f71",
                            "disk.0.write_through": "false",
                            "efi_secure_boot_enabled": "false",
                            "enable_disk_uuid": "true",
                            "enable_logging": "false",
                            "ept_rvi_mode": "automatic",
                            "extra_config.%": "0",
                            "firmware": "bios",
                            "folder": "k8s-hard-way",
                            "force_power_off": "true",
                            "guest_id": "ubuntu64Guest",
                            "guest_ip_addresses.#": "2",
                            "guest_ip_addresses.0": "192.168.69.21",
                            "guest_ip_addresses.1": "fe80::250:56ff:fea0:5536",
                            "host_system_id": "host-3688",
                            "hv_mode": "hvAuto",
                            "id": "42203a6f-239c-73b9-5cbd-102036ff69ea",
                            "latency_sensitivity": "normal",
                            "memory": "2048",
                            "memory_hot_add_enabled": "false",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_count": "20480",
                            "memory_share_level": "normal",
                            "migrate_wait_timeout": "30",
                            "moid": "vm-4163",
                            "name": "k8s-kubespray-worker-0",
                            "nested_hv_enabled": "false",
                            "network_interface.#": "1",
                            "network_interface.0.adapter_type": "vmxnet3",
                            "network_interface.0.bandwidth_limit": "-1",
                            "network_interface.0.bandwidth_reservation": "0",
                            "network_interface.0.bandwidth_share_count": "50",
                            "network_interface.0.bandwidth_share_level": "normal",
                            "network_interface.0.device_address": "pci:0:7",
                            "network_interface.0.key": "4000",
                            "network_interface.0.mac_address": "00:50:56:a0:55:36",
                            "network_interface.0.network_id": "dvportgroup-604",
                            "network_interface.0.use_static_mac": "false",
                            "num_cores_per_socket": "1",
                            "num_cpus": "1",
                            "reboot_required": "false",
                            "resource_pool_id": "resgroup-4138",
                            "run_tools_scripts_after_power_on": "true",
                            "run_tools_scripts_after_resume": "true",
                            "run_tools_scripts_before_guest_reboot": "false",
                            "run_tools_scripts_before_guest_shutdown": "true",
                            "run_tools_scripts_before_guest_standby": "true",
                            "scsi_controller_count": "1",
                            "scsi_type": "pvscsi",
                            "shutdown_wait_timeout": "3",
                            "swap_placement_policy": "inherit",
                            "sync_time_with_host": "false",
                            "tags.#": "0",
                            "uuid": "42203a6f-239c-73b9-5cbd-102036ff69ea",
                            "vapp_transport.#": "0",
                            "vmware_tools_status": "guestToolsRunning",
                            "vmx_path": "k8s-kubespray-worker-0/k8s-kubespray-worker-0.vmx",
                            "wait_for_guest_net_routable": "true",
                            "wait_for_guest_net_timeout": "5"
                        },
                        "meta": {
                            "schema_version": "3"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_virtual_machine.worker.1": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.vsphere_datastore.datastore",
                        "data.vsphere_network.network",
                        "data.vsphere_resource_pool.pool",
                        "data.vsphere_virtual_machine.template",
                        "local_file.kubespray_all",
                        "local_file.kubespray_hosts",
                        "local_file.kubespray_k8s_cluster",
                        "vsphere_folder.folder",
                        "vsphere_virtual_machine.master"
                    ],
                    "primary": {
                        "id": "42209de3-1790-dea3-e083-77a380e83246",
                        "attributes": {
                            "alternate_guest_name": "",
                            "annotation": "",
                            "boot_delay": "0",
                            "boot_retry_delay": "10000",
                            "boot_retry_enabled": "false",
                            "cdrom.#": "0",
                            "change_version": "2019-01-25T02:50:13.588471Z",
                            "clone.#": "1",
                            "clone.0.customize.#": "1",
                            "clone.0.customize.0.dns_server_list.#": "1",
                            "clone.0.customize.0.dns_server_list.0": "192.168.64.60",
                            "clone.0.customize.0.dns_suffix_list.#": "0",
                            "clone.0.customize.0.ipv4_gateway": "192.168.69.1",
                            "clone.0.customize.0.ipv6_gateway": "",
                            "clone.0.customize.0.linux_options.#": "1",
                            "clone.0.customize.0.linux_options.0.domain": "vballin.com",
                            "clone.0.customize.0.linux_options.0.host_name": "k8s-kubespray-worker-1",
                            "clone.0.customize.0.linux_options.0.hw_clock_utc": "true",
                            "clone.0.customize.0.linux_options.0.time_zone": "",
                            "clone.0.customize.0.network_interface.#": "1",
                            "clone.0.customize.0.network_interface.0.dns_domain": "",
                            "clone.0.customize.0.network_interface.0.dns_server_list.#": "0",
                            "clone.0.customize.0.network_interface.0.ipv4_address": "192.168.69.22",
                            "clone.0.customize.0.network_interface.0.ipv4_netmask": "24",
                            "clone.0.customize.0.network_interface.0.ipv6_address": "",
                            "clone.0.customize.0.network_interface.0.ipv6_netmask": "0",
                            "clone.0.customize.0.timeout": "10",
                            "clone.0.customize.0.windows_options.#": "0",
                            "clone.0.customize.0.windows_sysprep_text": "",
                            "clone.0.linked_clone": "true",
                            "clone.0.template_uuid": "42205dac-0aaa-3901-19f5-20358a09b442",
                            "clone.0.timeout": "30",
                            "cpu_hot_add_enabled": "false",
                            "cpu_hot_remove_enabled": "false",
                            "cpu_limit": "-1",
                            "cpu_performance_counters_enabled": "false",
                            "cpu_reservation": "0",
                            "cpu_share_count": "1000",
                            "cpu_share_level": "normal",
                            "custom_attributes.%": "0",
                            "datastore_id": "datastore-484",
                            "default_ip_address": "192.168.69.22",
                            "disk.#": "1",
                            "disk.0.attach": "false",
                            "disk.0.datastore_id": "datastore-484",
                            "disk.0.device_address": "scsi:0:0",
                            "disk.0.disk_mode": "persistent",
                            "disk.0.disk_sharing": "sharingNone",
                            "disk.0.eagerly_scrub": "false",
                            "disk.0.io_limit": "-1",
                            "disk.0.io_reservation": "0",
                            "disk.0.io_share_count": "1000",
                            "disk.0.io_share_level": "normal",
                            "disk.0.keep_on_remove": "false",
                            "disk.0.key": "2000",
                            "disk.0.label": "k8s-kubespray-worker-1.vmdk",
                            "disk.0.name": "",
                            "disk.0.path": "k8s-kubespray-worker-1/k8s-kubespray-worker-1.vmdk",
                            "disk.0.size": "40",
                            "disk.0.thin_provisioned": "true",
                            "disk.0.unit_number": "0",
                            "disk.0.uuid": "6000C298-4976-f720-3f9f-627aa74d9f71",
                            "disk.0.write_through": "false",
                            "efi_secure_boot_enabled": "false",
                            "enable_disk_uuid": "true",
                            "enable_logging": "false",
                            "ept_rvi_mode": "automatic",
                            "extra_config.%": "0",
                            "firmware": "bios",
                            "folder": "k8s-hard-way",
                            "force_power_off": "true",
                            "guest_id": "ubuntu64Guest",
                            "guest_ip_addresses.#": "2",
                            "guest_ip_addresses.0": "192.168.69.22",
                            "guest_ip_addresses.1": "fe80::250:56ff:fea0:5499",
                            "host_system_id": "host-3681",
                            "hv_mode": "hvAuto",
                            "id": "42209de3-1790-dea3-e083-77a380e83246",
                            "latency_sensitivity": "normal",
                            "memory": "2048",
                            "memory_hot_add_enabled": "false",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_count": "20480",
                            "memory_share_level": "normal",
                            "migrate_wait_timeout": "30",
                            "moid": "vm-4162",
                            "name": "k8s-kubespray-worker-1",
                            "nested_hv_enabled": "false",
                            "network_interface.#": "1",
                            "network_interface.0.adapter_type": "vmxnet3",
                            "network_interface.0.bandwidth_limit": "-1",
                            "network_interface.0.bandwidth_reservation": "0",
                            "network_interface.0.bandwidth_share_count": "50",
                            "network_interface.0.bandwidth_share_level": "normal",
                            "network_interface.0.device_address": "pci:0:7",
                            "network_interface.0.key": "4000",
                            "network_interface.0.mac_address": "00:50:56:a0:54:99",
                            "network_interface.0.network_id": "dvportgroup-604",
                            "network_interface.0.use_static_mac": "false",
                            "num_cores_per_socket": "1",
                            "num_cpus": "1",
                            "reboot_required": "false",
                            "resource_pool_id": "resgroup-4138",
                            "run_tools_scripts_after_power_on": "true",
                            "run_tools_scripts_after_resume": "true",
                            "run_tools_scripts_before_guest_reboot": "false",
                            "run_tools_scripts_before_guest_shutdown": "true",
                            "run_tools_scripts_before_guest_standby": "true",
                            "scsi_controller_count": "1",
                            "scsi_type": "pvscsi",
                            "shutdown_wait_timeout": "3",
                            "swap_placement_policy": "inherit",
                            "sync_time_with_host": "false",
                            "tags.#": "0",
                            "uuid": "42209de3-1790-dea3-e083-77a380e83246",
                            "vapp_transport.#": "0",
                            "vmware_tools_status": "guestToolsRunning",
                            "vmx_path": "k8s-kubespray-worker-1/k8s-kubespray-worker-1.vmx",
                            "wait_for_guest_net_routable": "true",
                            "wait_for_guest_net_timeout": "5"
                        },
                        "meta": {
                            "schema_version": "3"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_virtual_machine.worker.2": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.vsphere_datastore.datastore",
                        "data.vsphere_network.network",
                        "data.vsphere_resource_pool.pool",
                        "data.vsphere_virtual_machine.template",
                        "local_file.kubespray_all",
                        "local_file.kubespray_hosts",
                        "local_file.kubespray_k8s_cluster",
                        "vsphere_folder.folder",
                        "vsphere_virtual_machine.master"
                    ],
                    "primary": {
                        "id": "4220c5cc-e9bf-ce8d-38e4-ef489b36261d",
                        "attributes": {
                            "alternate_guest_name": "",
                            "annotation": "",
                            "boot_delay": "0",
                            "boot_retry_delay": "10000",
                            "boot_retry_enabled": "false",
                            "cdrom.#": "0",
                            "change_version": "2019-01-25T02:50:13.534915Z",
                            "clone.#": "1",
                            "clone.0.customize.#": "1",
                            "clone.0.customize.0.dns_server_list.#": "1",
                            "clone.0.customize.0.dns_server_list.0": "192.168.64.60",
                            "clone.0.customize.0.dns_suffix_list.#": "0",
                            "clone.0.customize.0.ipv4_gateway": "192.168.69.1",
                            "clone.0.customize.0.ipv6_gateway": "",
                            "clone.0.customize.0.linux_options.#": "1",
                            "clone.0.customize.0.linux_options.0.domain": "vballin.com",
                            "clone.0.customize.0.linux_options.0.host_name": "k8s-kubespray-worker-2",
                            "clone.0.customize.0.linux_options.0.hw_clock_utc": "true",
                            "clone.0.customize.0.linux_options.0.time_zone": "",
                            "clone.0.customize.0.network_interface.#": "1",
                            "clone.0.customize.0.network_interface.0.dns_domain": "",
                            "clone.0.customize.0.network_interface.0.dns_server_list.#": "0",
                            "clone.0.customize.0.network_interface.0.ipv4_address": "192.168.69.23",
                            "clone.0.customize.0.network_interface.0.ipv4_netmask": "24",
                            "clone.0.customize.0.network_interface.0.ipv6_address": "",
                            "clone.0.customize.0.network_interface.0.ipv6_netmask": "0",
                            "clone.0.customize.0.timeout": "10",
                            "clone.0.customize.0.windows_options.#": "0",
                            "clone.0.customize.0.windows_sysprep_text": "",
                            "clone.0.linked_clone": "true",
                            "clone.0.template_uuid": "42205dac-0aaa-3901-19f5-20358a09b442",
                            "clone.0.timeout": "30",
                            "cpu_hot_add_enabled": "false",
                            "cpu_hot_remove_enabled": "false",
                            "cpu_limit": "-1",
                            "cpu_performance_counters_enabled": "false",
                            "cpu_reservation": "0",
                            "cpu_share_count": "1000",
                            "cpu_share_level": "normal",
                            "custom_attributes.%": "0",
                            "datastore_id": "datastore-484",
                            "default_ip_address": "192.168.69.23",
                            "disk.#": "1",
                            "disk.0.attach": "false",
                            "disk.0.datastore_id": "datastore-484",
                            "disk.0.device_address": "scsi:0:0",
                            "disk.0.disk_mode": "persistent",
                            "disk.0.disk_sharing": "sharingNone",
                            "disk.0.eagerly_scrub": "false",
                            "disk.0.io_limit": "-1",
                            "disk.0.io_reservation": "0",
                            "disk.0.io_share_count": "1000",
                            "disk.0.io_share_level": "normal",
                            "disk.0.keep_on_remove": "false",
                            "disk.0.key": "2000",
                            "disk.0.label": "k8s-kubespray-worker-2.vmdk",
                            "disk.0.name": "",
                            "disk.0.path": "k8s-kubespray-worker-2/k8s-kubespray-worker-2.vmdk",
                            "disk.0.size": "40",
                            "disk.0.thin_provisioned": "true",
                            "disk.0.unit_number": "0",
                            "disk.0.uuid": "6000C298-4976-f720-3f9f-627aa74d9f71",
                            "disk.0.write_through": "false",
                            "efi_secure_boot_enabled": "false",
                            "enable_disk_uuid": "true",
                            "enable_logging": "false",
                            "ept_rvi_mode": "automatic",
                            "extra_config.%": "0",
                            "firmware": "bios",
                            "folder": "k8s-hard-way",
                            "force_power_off": "true",
                            "guest_id": "ubuntu64Guest",
                            "guest_ip_addresses.#": "2",
                            "guest_ip_addresses.0": "192.168.69.23",
                            "guest_ip_addresses.1": "fe80::250:56ff:fea0:3ba8",
                            "host_system_id": "host-3681",
                            "hv_mode": "hvAuto",
                            "id": "4220c5cc-e9bf-ce8d-38e4-ef489b36261d",
                            "latency_sensitivity": "normal",
                            "memory": "2048",
                            "memory_hot_add_enabled": "false",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_count": "20480",
                            "memory_share_level": "normal",
                            "migrate_wait_timeout": "30",
                            "moid": "vm-4161",
                            "name": "k8s-kubespray-worker-2",
                            "nested_hv_enabled": "false",
                            "network_interface.#": "1",
                            "network_interface.0.adapter_type": "vmxnet3",
                            "network_interface.0.bandwidth_limit": "-1",
                            "network_interface.0.bandwidth_reservation": "0",
                            "network_interface.0.bandwidth_share_count": "50",
                            "network_interface.0.bandwidth_share_level": "normal",
                            "network_interface.0.device_address": "pci:0:7",
                            "network_interface.0.key": "4000",
                            "network_interface.0.mac_address": "00:50:56:a0:3b:a8",
                            "network_interface.0.network_id": "dvportgroup-604",
                            "network_interface.0.use_static_mac": "false",
                            "num_cores_per_socket": "1",
                            "num_cpus": "1",
                            "reboot_required": "false",
                            "resource_pool_id": "resgroup-4138",
                            "run_tools_scripts_after_power_on": "true",
                            "run_tools_scripts_after_resume": "true",
                            "run_tools_scripts_before_guest_reboot": "false",
                            "run_tools_scripts_before_guest_shutdown": "true",
                            "run_tools_scripts_before_guest_standby": "true",
                            "scsi_controller_count": "1",
                            "scsi_type": "pvscsi",
                            "shutdown_wait_timeout": "3",
                            "swap_placement_policy": "inherit",
                            "sync_time_with_host": "false",
                            "tags.#": "0",
                            "uuid": "4220c5cc-e9bf-ce8d-38e4-ef489b36261d",
                            "vapp_transport.#": "0",
                            "vmware_tools_status": "guestToolsRunning",
                            "vmx_path": "k8s-kubespray-worker-2/k8s-kubespray-worker-2.vmx",
                            "wait_for_guest_net_routable": "true",
                            "wait_for_guest_net_timeout": "5"
                        },
                        "meta": {
                            "schema_version": "3"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                }
            },
            "depends_on": []
        }
    ]
}
